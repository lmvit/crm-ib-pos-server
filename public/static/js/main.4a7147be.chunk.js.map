{"version":3,"sources":["pos/input.js","pos/validation.js","config/index.js","pos/Pos-login.js","pos/pos-create-account.js","pos/getTime.js","pos/pos-term-and-conditions.js","jwtDecode.js","provide-business/AddCustomer.js","provide-business/helpers.js","provide-business/CustomerDetails.js","provide-business/EditCustomerDetails.js","FormatDate.js","protectedRoute/Routing.js","Transcations/generalInsuranceSearch.js","helper/Input.js","helper/validations.js","helper/initialValues.js","Transcations/components/Dailog.js","Transcations/GeneralInsuranceForm.js","Transcations/LifeInsuranceSearch.js","Transcations/components/PopUp.js","helper/api.js","Transcations/LifeInsuranceForm.js","posReports/Life-insurance-pos-reports.js","graphs/BarChart.js","pos/Home.js","RenewalReports/ReportsTable.js","RenewalReports/LifeInsurance.js","RenewalReports/GeneralInsurance.js","posReports/logo.js","payouts/InsurancePayoutsDetails.js","payouts/GeneralPayoutDataSearch.js","payouts/PayoutDateSeach.js","pos/posHome.js","posReports/InsuranceReportsTable.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultInput","props","name","label","required","type","classes","rest","className","style","height","htmlFor","color","width","placeholder","autoComplete","render","message","Select","options","as","value","map","element","index","toLocaleLowerCase","PermanentInput","ValidationSchema","yup","first_name","matches","min","last_name","email","account_number","branch_name","mobile_number","pancard","aadhar_number","ifsc_code","bank_name","person_type","PosValidationSchema","posId","password","trim","CustomerValidation","title","locations","branch","dob","gender","present_address1","present_address2","present_pincode","present_states","present_city","present_country","present_district","ValidationWithPermanentAddress","permanent_address1","permanent_address2","permanent_pincode","permanent_states","permanent_city","permanent_country","permanent_district","baseURL","Poslogin","history","useHistory","registerPosDetails","push","onSubmit","onSubmitProps","a","axios","post","CrmforPosService","then","res","data","resetForm","setSubmitting","window","alert","sessionStorage","setItem","accessToken","catch","err","console","log","posLoginForm","initialValues","validationSchema","formik","backgroundColor","borderRadius","obj","touched","errors","fontSize","cursor","onClick","PosRegisterDetails","validateRows","values","token","getItem","toLowerCase","headers","Authorization","pathname","state","redirectPosLogin","posForm","formContainer","Time","date","minTime","getHours","minMin","getMinutes","getSeconds","PosTerms","useLocation","redirectPage","useState","setData","useEffect","checked","setChecked","Date","month","toLocaleDateString","toString","day","getDate","year","getFullYear","from","to","fromDate","toDate","toDateString","textAlign","fontFamily","onChange","replace","parseJwt","base64","split","jsonPayload","decodeURIComponent","atob","c","charCodeAt","slice","join","JSON","parse","Addcustomer","user","useContext","UserContext","imageRef","useRef","imageRef1","imageRef2","imageRef3","checkRef","location","setLocation","setBranches","files","setFiles","id","setId","setCustData","aboutController","AbortController","get","abort","presentCustomerAddress","permanentCustomerAddress","presentName","customerDetails","customerIdentity","selectBranchHandler","e","handleChange","target","customerExists","aadhar","checkValidFiles","pos_id","status","current","errorArr","file","undefined","length","checkSelectorHandler","uploadFile","size","reader","FileReader","readAsBinaryString","onload","preValue","btoa","result","enableReinitialize","ref","readOnly","accept","CustomerDetails","redirectEditPage","searchData","setSearchData","getCustomerIdHandler","onSearchHandle","filter","customer","customer_id","includes","borderCollapse","colSpan","EditCustomerDetails","redirectHomePage","uploadAadhar","setUploadAadhar","uploadPan","setUploadPan","uploadPhoto","setUploadPhoto","uploadPassbook","setUploadPassbook","val","custId","present_line1","present_line2","present_state","permanent_distric","image","Promise","resolve","setTimeout","uploadAadharFile","put","uploadPanFile","pan","uploadPhotoFile","photo","uploadPassbookFile","passbook","customerId","Routing","logout","LifeInsuranceSearch","customerData","setCustomerData","active","setActive","inputValue","urlActive","searchInput","path","count","renewalDate","dateStyle","confirm","callbacks","Input","handler","field","form","meta","children","OptionsSelect","key1","key2","key3","DateField","minDate","disabled","GeneralValidationFunction","excludeEmptyString","max","mobile","nullable","pan_number","permanent_line1","permanent_line2","permanent_state","employee_id","cashObject","company_name","product_name","type_of_insurance","sub_type","plan_type","plan_name","gross_premium","net_premium","policy_type","policy_tenure","date_of_policy_login","premium_payment_mode","type_of_business","mode_of_payment","date_of_entry","revenue","policy_number","stage","cheque_number","cheque_account","cheque_date","reference_number","checkObject","ddObject","onlineObject","filesObject","Object","assign","LifeValidationFunction","application_number","premium_payment_term","policy_term","policy_issue_date","customerInitialValue","TransactionCustomerFunction","AlertDialog","dailog","open","pending","close","dailogOpen","setDailogOpen","Dialog","DialogTitle","fontWeight","DialogContent","DialogContentText","pendingString","completeString","dailogMessage","DialogActions","Button","variant","GeneralInsuranceTransaction","companies","setCompanies","products","setProduct","insuranceType","setInsuranceType","planType","setPlanType","planName","setPlanName","subType","setSubType","filesInput","revenueDetails","setRevenueDetails","saveTransactionsDailog","setSaveTransactionsDailog","setRevenue","netPremium","setNetPremium","mop","setMop","pdfRef1","error","companiesArray","fetchCompanies","item","Set","mopHandler","companyFunction","response","productFunction","formikValues","typeOfInsurance","mode","planTypeHandler","planNameHandler","premium","extraInformation","customer_mobile","customer_aadhar","customer_pan","customer_name","submitted_pos_id","transactionDetails","transaction_id","policy_form","formikProps","Number","toFixed","grossFunction","selected","PopUp","popup","openSnack","setOpenSnack","handleClose","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","defaultRouter","headersFunction","fetchLifeReportsForPayouts","from_date","to_date","fetchGeneralReportsForPayouts","fetchLifePptRevenue","getPOSPersonType","LifeInsuranceTransaction","pptRevenue","setPptRevenue","ppt","setPpt","pdfRef2","fetchProduct","planTypeFunction","planNameFunction","premiumPaymentTermFunction","application_form","LifeInsurancePosReports","urlactive","lifePosReportsValidation","inputFields","responseData","BarChart","lifeData","labels","datasets","bg","borderWidth","barPercentage","legend","fontColor","display","text","scales","yAxes","ticks","beginAtZero","xAxes","Home","lifeTxnCount","setLifeTxnCount","generalTxnCount","setGeneralTxnCount","lifeRevenueData","setLifeRevenueData","generalRevenueData","setGeneralRevenueData","chartLifeInput","Array","fill","chartGeneralInput","arr","total","minHeight","ReportsTable","renewal_date","redirect","LifeInsurance","currentDate","redirectToLifeInsuranceTxn","logo","LifeInsurancePayouts","dates","calculateTotal","reduce","accumulator","currentValue","getTds","personType","getMonth","doc","jspdf","addImage","setFont","setFontSize","addMonths","autoTable","html","theme","useCss","startY","margin","left","right","finalY","lastAutoTable","account","toLocaleUpperCase","save","exportPDF","GeneralPayoutDataSeach","pathName","activePath","PayoutData","setPayoutsData","setPersonType","posAccount","setPosAccount","setDates","InsurancePayoutsDetails","PayoutDateSeach","React","createContext","PosHome","role","setRole","sideBarToogle","setSideBarToogle","userName","setUserName","styleProps","useSpring","opacity","marginLeft","toggleSideBar","allLis","document","querySelectorAll","li","classList","contains","remove","querySelector","textContent","add","Provider","div","marginTop","clear","tagName","closeBar","iconShape","component","AddCustomer","LifeInsuranceData","GeneralInsuranceData","GeneralInsurancePosReports","LifeInsuranceRenewalReports","GeneralInsuranceRenewalReports","InsuranceReportsTable","table","filename","sheet","buttonText","App","exact","PosLogin","PosTermsAndConditions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a7147be.chunk.js","sourcesContent":["/*eslint-disable*/\r\nimport {Field, ErrorMessage } from 'formik';\r\nimport { AiFillStar } from 'react-icons/ai';\r\n\r\nexport const DefaultInput = (props) => {\r\n  const { name, label, required, type,classes,...rest} = props;\r\n  return <div className={classes} style={{height:'100px'}}>\r\n    <div className=\"p-1\">\r\n      <label htmlFor={name} className=\"h6\">{label} \r\n        {required ? <sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup> : null}\r\n      </label>\r\n    </div>\r\n    <div>\r\n      <Field type={type} {...rest} name={name} placeholder={label} autoComplete=\"off\" />\r\n      <ErrorMessage name={name} render={message => <span className=\"text-danger\">{message}</span>} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport const Select = (props)=>{\r\n  const {name,label,required,options,classes,...rest}= props;\r\n  return <div className={classes} style={{height:'100px'}}>\r\n    <div className=\"p-1\">\r\n      <label htmlFor={name} className=\"h6\">{label} {required ? <sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup> : null}</label>\r\n    </div>\r\n    <div>\r\n        <Field as=\"select\" name={name} {...rest}>\r\n          <option value=\"\">Select</option>\r\n          {options.map((element,index)=>{\r\n            return (\r\n              <option key={index} className=\"text-capitalize\" value={element.toLocaleLowerCase()}>{element}</option>\r\n            )\r\n          })}\r\n        </Field>\r\n        <ErrorMessage name={name} render={message => <span className=\"text-danger\">{message}</span>} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport const PermanentInput = (props) => {\r\n  const { name, label, required, type,classes,...rest} = props;\r\n  // console.log(props)\r\n  return <div className={classes} style={{height:'100px'}}>\r\n    <div className=\"p-1\">\r\n      <label htmlFor={name} className=\"h6\">{label} \r\n        {required ? <sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup> : null}\r\n      </label>\r\n    </div>\r\n    <div>\r\n      <Field type={type} name={name} placeholder={label} autoComplete=\"off\" {...rest}/>\r\n      <ErrorMessage name={name} render={message => <span className=\"text-danger\">{message}</span>} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n","import * as yup from 'yup';\r\n\r\nexport default function ValidationSchema() {\r\n    return (\r\n        yup.object({\r\n            first_name: yup.string()\r\n                .required('Please Enter First Name')\r\n                .matches(/^[a-zA-Z\\s]+$/, \"Please Enter Only Letters\")\r\n                .min(2, 'Please Enter At least 2 Characters'),\r\n            last_name: yup.string()\r\n                .required('Please Enter Last Name')\r\n                .matches(/^[a-zA-z]+$/, \"Please Enter Only Letters\")\r\n                .min(2, 'Please Enter At least 2 Characters'),\r\n            email: yup.string().required('Please Enter Email Address').email('Please Enter a valid Email Address'),\r\n            account_number: yup.string().required('Please Enter Bank Account Number').matches(/^\\d{9,18}$/, 'Please Enter at least 8 Numbers'),\r\n            branch_name: yup.string()\r\n                .required('Please Enter Account Branch Name')\r\n                .matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\")\r\n                .min(3, 'Please Enter At least 3 Characters'),\r\n            mobile_number: yup.string().required('Please Enter Mobile Number')\r\n                .matches(/^[6-9]\\d{9}$/, 'Please Enter a valid Mobile Number'),\r\n            pancard: yup.string().required('Please Enter Pancard Number').matches(/^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}$/, 'Please Enter a Valid Pancard Number'),\r\n            aadhar_number: yup.string().required('Please Enter Aadhaar Number').matches(/^[2-9]{1}[0-9]{3}[0-9]{4}[0-9]{4}$/, 'Please Enter 12 Digit Aadhaar Number'),\r\n            ifsc_code: yup.string().required('Please Enter IFSC Code').matches(/^[A-Za-z]{4}[a-zA-Z0-9]{7}$/, 'Please Enter 11 digits alpha numeric code'),\r\n            bank_name: yup.string().matches(/^[a-zA-Z\\s]+$/, 'Please Enter Only Letters').required('Please Enter Bank Name'),\r\n            person_type : yup.string().required('Please Select Person Type')\r\n        })\r\n    )\r\n}\r\n\r\nexport function PosValidationSchema() {\r\n    return (\r\n        yup.object({\r\n            posId: yup.string()\r\n                .required(\"Please Enter POS Id or Email Address\"),\r\n            password: yup.string()\r\n                .min(5, 'Please Enter at least 5 characters').required('Please Enter Password')\r\n                .matches(/^[a-zA-Z0-9%*#@]+$/).trim()\r\n        })\r\n    )\r\n}\r\n\r\n\r\n\r\nexport function CustomerValidation() {\r\n    return (\r\n        yup.object({\r\n            title: yup.string()\r\n                .required('Please Select Title'),\r\n            first_name: yup.string()\r\n                .required('Please Enter First Name')\r\n                .matches(/^[a-zA-Z\\s]+$/, \"Please Enter Only Letters\")\r\n                .min(2, 'Please Enter At least 2 Characters'),\r\n            last_name: yup.string()\r\n                .required('Please Enter Last Name')\r\n                .matches(/^[a-zA-z]+$/, \"Please Enter Only Letters\")\r\n                .min(2, 'Please Enter At least 2 Characters'),\r\n            email: yup.string().required('Please Enter Email Address').email('Please Enter a valid Email Address'),\r\n            locations: yup.string()\r\n                .required('Please Select Location'),\r\n            branch: yup.string()\r\n                .required('Please Select Branch'),\r\n            mobile_number: yup.string().required('Please Enter Mobile Number')\r\n                .matches(/^[6-9]\\d{9}$/, 'Please Enter a valid Mobile Number'),\r\n            dob: yup.string().required('Please Select Date of Birth'),\r\n            gender: yup.string().required('Please Select Gender'),\r\n            pancard: yup.string().required('Please Enter Pancard Number').matches(/^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}$/, 'Please Enter a Valid Pancard Number'),\r\n            aadhar_number: yup.string().required('Please Enter Aadhaar Number').matches(/^[2-9]{1}[0-9]{3}[0-9]{4}[0-9]{4}$/, 'Please Enter 12 Digit Aadhaar Number'),\r\n            present_address1: yup.string().required('Please Enter Address1'),\r\n            present_address2: yup.string(),\r\n            present_pincode: yup.string().required('Please Enter Pincode').matches(/^[1-9]{1}[0-9]{2}[0-9]{3}$/, 'Please Enter a valid Pincode'),\r\n            present_states: yup.string().required('Please Enter State').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            present_city: yup.string().required('Please Enter City').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            present_country: yup.string().required('Please Select Country'),\r\n            present_district: yup.string().required('Please Enter District').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n        })\r\n    )\r\n}\r\nexport function ValidationWithPermanentAddress() {\r\n    return (\r\n        yup.object({\r\n            title: yup.string()\r\n                .required('Please Select Title'),\r\n            first_name: yup.string()\r\n                .required('Please Enter First Name')\r\n                .matches(/^[a-zA-Z\\s]+$/, \"Please Enter Only Letters\")\r\n                .min(2, 'Please Enter At least 2 Characters'),\r\n            last_name: yup.string()\r\n                .required('Please Enter Last Name')\r\n                .matches(/^[a-zA-z]+$/, \"Please Enter Only Letters\")\r\n                .min(2, 'Please Enter At least 2 Characters'),\r\n            email: yup.string().required('Please Enter Email Address').email('Please Enter a valid Email Address'),\r\n            locations: yup.string()\r\n                .required('Please Select Location'),\r\n            branch: yup.string()\r\n                .required('Please Select Branch'),\r\n            mobile_number: yup.string().required('Please Enter Mobile Number')\r\n                .matches(/^[6-9]\\d{9}$/, 'Please Enter a valid Mobile Number'),\r\n            dob: yup.string().required('Please Select Date of Birth'),\r\n            gender: yup.string().required('Please Select Gender'),\r\n            pancard: yup.string().required('Please Enter Pancard Number').matches(/^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}$/, 'Please Enter a Valid Pancard Number'),\r\n            aadhar_number: yup.string().required('Please Enter Aadhaar Number').matches(/^[2-9]{1}[0-9]{3}[0-9]{4}[0-9]{4}$/, 'Please Enter 12 Digit Aadhaar Number'),\r\n            present_address1: yup.string().required('Please Enter Address1'),\r\n            present_address2: yup.string(),\r\n            present_pincode: yup.string().required('Please Enter Pincode').matches(/^[1-9]{1}[0-9]{2}[0-9]{3}$/, 'Please Enter a valid Pincode'),\r\n            present_states: yup.string().required('Please Enter State').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            present_city: yup.string().required('Please Enter City').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            present_country: yup.string().required('Please Enter Country').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            present_district: yup.string().required('Please Enter District').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            permanent_address1: yup.string().required('Please Enter Address1'),\r\n            permanent_address2: yup.string(),\r\n            permanent_pincode: yup.string().required('Please Enter Pincode').matches(/^[1-9]{1}[0-9]{2}[0-9]{3}$/, 'Please Enter a valid Pincode'),\r\n            permanent_states: yup.string().required('Please Enter State').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            permanent_city: yup.string().required('Please Enter City').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\"),\r\n            permanent_country: yup.string().required('Please Select Country'),\r\n            permanent_district: yup.string().required('Please Enter District').matches(/^[a-zA-z\\s]+$/, \"Please Enter Only Letters\")\r\n        })\r\n    )\r\n}\r\n\r\nexport function LifeInsuranceTransactionValidation(){\r\n    return(\r\n        yup.object({\r\n            from_date : yup.string().required('Please Select From Date'),\r\n            to_date : yup.string().required('Please Select To Date')\r\n        })\r\n    )\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n\tCrmforPosService: {\r\n\t\t// baseURL: 'http://localhost:8080',\r\n        baseURL : \"\"\r\n\t},\r\n    CrmforPosRouteURL : {\r\n        // baseRouteURL : 'http://localhost:3000',\r\n        baseRouteURL : ''\r\n    }\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport { DefaultInput } from '../pos/input';\r\nimport { PosValidationSchema } from '../pos/validation';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\n\r\nimport '../App.css';\r\n\r\nfunction Poslogin() {\r\n    const history = useHistory();\r\n    const registerPosDetails = () => {\r\n        history.push('/register-pos-details')\r\n    }\r\n\r\n    const initialValues = {\r\n        posId: '',\r\n        password: ''\r\n    }\r\n\r\n    const onSubmit = async (value,onSubmitProps) => {\r\n        // const token = sessionStorage.getItem('token');\r\n        axios.post(CrmforPosService.CrmforPosService.baseURL+'/api/pos/login/pos-login',value)\r\n        .then(res=>{\r\n            if(res.data.message === 'failed'){\r\n                onSubmitProps.resetForm();\r\n                onSubmitProps.setSubmitting(false);\r\n                return window.alert('Invalid POS ID or Passsword')\r\n            }else{\r\n                // console.log(res.data);\r\n                sessionStorage.setItem('token',res.data.accessToken)\r\n                history.push('/home/reports-count');\r\n                onSubmitProps.resetForm();\r\n                onSubmitProps.setSubmitting(false);\r\n                return window.alert('Login Successfully');\r\n            }\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    const posLoginForm = [\r\n        { type: \"text\", name: \"posId\", label: \"POS ID or Email Address\" },\r\n        { type: \"password\", name: \"password\", label: \"Password\" },\r\n    ]\r\n\r\n    const classes = \"\";\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={PosValidationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {formik => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"background\">\r\n                                <div className=\"login-form col-11 col-md-8 col-lg-6 col-xl-4 py-3 my-3\" style={{ height: 'auto', backgroundColor: '#fff', borderRadius: '10px' }}>\r\n                                    <h4 className=\"text-left my-2\">Login as POS</h4>\r\n                                    <div className=\"icon\"></div>\r\n                                    <div className=\"justify-content-center col-12 m-auto\">\r\n                                        {posLoginForm.map((obj,index)=>{\r\n                                            return(\r\n                                                <DefaultInput key={index} type={obj.type} classes={classes} name={obj.name} label={obj.label} required\r\n                                                className={formik.touched[obj.name] && formik.errors[obj.name] ? \"is-invalid form-control\":\"form-control\"}/>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"mt-4\">\r\n                                        <input type=\"submit\" value=\"Log in\" style={{ fontSize: '20px' }} className=\"col-10 m-auto btn btn-primary btn-block p-2\" />\r\n                                    </div>\r\n                                    <hr className=\"p-0\" />\r\n                                    <div className=\"text-center font-weight-bold\">\r\n                                        <p className=\"mt-2\" style={{ cursor: 'pointer' }} onClick={registerPosDetails}>Register here if you don't have an account?</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\nexport default Poslogin;\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\nimport { Form, Formik} from 'formik';\r\nimport { DefaultInput,Select } from '../pos/input';\r\nimport ValidationSchema from '../pos/validation';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\n\r\nfunction PosRegisterDetails() {\r\n    const history = useHistory();\r\n    const initialValues = {\r\n        first_name: '',\r\n        last_name: '',\r\n        mobile_number: '',\r\n        email: '',\r\n        aadhar_number: '',\r\n        pancard: '',\r\n        bank_name: '',\r\n        ifsc_code: '',\r\n        branch_name: '',\r\n        account_number: '',\r\n        person_type : ''\r\n    }\r\n    const validateRows = ['Mobile Number Already exists','Email Already exists','Aadhar Number Already exists','Pancard Number Already exists','Account Number Already exists'];\r\n\r\n    const onSubmit = async (values) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const obj = {\r\n            first_name : values.first_name.toLowerCase(),\r\n            last_name : values.last_name.toLowerCase(),\r\n            mobile_number: values.mobile_number,\r\n            email: values.email.toLowerCase(),\r\n            aadhar_number: values.aadhar_number,\r\n            pancard: values.pancard.toLowerCase(),\r\n            bank_name: values.bank_name.toLowerCase(),\r\n            ifsc_code: values.ifsc_code.toLowerCase(),\r\n            branch_name: values.branch_name.toLowerCase(),\r\n            account_number: values.account_number,\r\n            person_type : values.person_type\r\n        }\r\n        axios.post(CrmforPosService.CrmforPosService.baseURL+`/api/pos/login/validate-details`,obj,{headers:{Authorization:token}})\r\n        .then(res=>{\r\n            if(res.data === validateRows[0]){\r\n                return window.alert(validateRows[0]);\r\n            }else if(res.data === validateRows[1]){\r\n                return window.alert(validateRows[1]);\r\n            }else if(res.data === validateRows[2]){\r\n                return window.alert(validateRows[2])\r\n            }else if(res.data === validateRows[3]){\r\n                return window.alert(validateRows[3])\r\n            }else if(res.data === validateRows[4]){\r\n                return window.alert(validateRows[4])\r\n            }else if(res.data === 'No Duplicate Values Found'){\r\n                history.push({\r\n                    pathname : '/pos-terms-and-conditions',\r\n                    state : obj\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const redirectPosLogin = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    const posForm = [\r\n        { type: \"text\", name: \"first_name\", label: \"First Name\" },\r\n        { type: \"text\", name: \"last_name\", label: \"Last Name\" },\r\n        { type: \"number\", name: \"mobile_number\", label: \"Mobile Number\" },\r\n        { type: \"email\", name: \"email\", label: \"Email\" },\r\n        { type: \"number\", name: \"aadhar_number\", label: \"Aadhar Number\" },\r\n        { type: \"text\", name: \"pancard\", label: \"Pancard\" },\r\n        { type: \"text\", name: \"bank_name\", label: \"Bank Name\" },\r\n        { type: \"text\", name: \"account_number\", label: \"Account Number\" },\r\n        { type: \"text\", name: \"ifsc_code\", label: \"IFSC Code\" },\r\n        { type: \"text\", name: \"branch_name\", label: \"Branch Name\" }\r\n    ];\r\n\r\n    const options = ['Individual','non-individual']\r\n\r\n    const formContainer = {\r\n        height: 'auto',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '10px'\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={ValidationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {formik => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"background\">\r\n                                <div className=\"register-form col-11 col-md-8 col-lg-6 col-xl-4 py-3 my-3\" style={formContainer}>\r\n                                    <h4 className=\"text-center\">Register</h4>\r\n                                    <div className=\"justify-content-center col-12 m-auto\">\r\n                                        {posForm.map((obj, index) => {\r\n                                            return (\r\n                                                <DefaultInput key={index} name={obj.name} type={obj.type} label={obj.label} required\r\n                                                    className={formik.touched[obj.name] && formik.errors[obj.name] ? \"is-invalid form-control\" : \"form-control text-uppercase\"} />\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"justify-content-center col-12 m-auto\">\r\n                                        <Select options={options} label=\"Person Type\" required name=\"person_type\"\r\n                                         className={formik.touched.person_type && formik.errors.person_type ? \"is-invalid form-control\" : \"form-control text-uppercase\"}/>  \r\n                                    </div>\r\n\r\n                                    <div className=\"container p-2 mt-3\">\r\n                                        <button  className=\"btn btn-primary btn-block col-10 m-auto\">Next</button>\r\n                                    </div>\r\n                                    <hr className=\"p-0\" />\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <span className=\"font-weight-bold\" style={{ cursor: 'pointer' }} onClick={redirectPosLogin}>POS Login</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\nexport default PosRegisterDetails;","function Time(date) {\r\n    const minTime =  date.getHours();\r\n    const minMin = date.getMinutes();\r\n    const seconds = date.getSeconds()\r\n    let min,minHr\r\n    if (minTime<10) {\r\n        minHr = '0'+minTime;\r\n    }else{\r\n        minHr=minTime;\r\n    }\r\n    if(minMin<10){\r\n         min = '0'+minMin\r\n    }else{\r\n        min = minMin;\r\n    }\r\n    const time = minHr+\":\"+min+\":\"+seconds;\r\n    return time;\r\n}\r\n\r\nexport default Time;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\nimport Time from './getTime';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\n\r\nfunction PosTerms() {\r\n    const history = useLocation();\r\n    const redirectPage = useHistory();\r\n    const [data,setData] = useState([])\r\n    useEffect(() => {\r\n       setData(history.state)\r\n    }, [history])\r\n    const [checked,setChecked] = useState(false);\r\n    const onCheckHandler = ()=>{\r\n        setChecked(value=>!value)\r\n    }\r\n    const date = new Date();\r\n    const month = date.toLocaleDateString('en-GB',{month:'long'}).toString()\r\n    const day = date.getDate().toString();\r\n    const year = date.getFullYear().toString();\r\n    let from=2021,to=2024;\r\n    let fromDate = new Date(`2021-05-31`);\r\n    let toDate = new Date(`${fromDate.getFullYear()+3}-05-30`);\r\n    \r\n    if(date.toDateString() === toDate.toDateString()){\r\n        fromDate = new Date(`${date.getFullYear()}-05-31`);\r\n        toDate = new Date(`${date.getFullYear()+3}-05-30`);\r\n        from = fromDate.getFullYear();\r\n        to = toDate.getFullYear();\r\n    }\r\n    const onSubmitHandler=()=>{\r\n        const token = sessionStorage.getItem('token');\r\n        axios.post(CrmforPosService.CrmforPosService.baseURL + `/api/pos/login/register/details`, data,{headers:{Authorization:token}})\r\n            .then(res => {\r\n                if(res.data === 'successfully inserted'){\r\n                    window.alert('Successfully Added');\r\n                    redirectPage.replace('/')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\" style={{ textAlign: 'justify',fontFamily:' font-family: Arial, Helvetica, sans-serif' }}>\r\n            <h5 className=\"text-center my-2\">AGREEMENT</h5>\r\n            <div className=\"container\">\r\n                <p>Agreement of Appointment and engagement, by LMV Insurance Broking Services Private Limited, for implementation of IRDAI guidelines/ circular no.\r\n                    IRDA/Int/GDL/ORD/183/10/2015 dated 26th October 2015, followed by IRDAI circular; IRDA/Int/GDL/ORD/047/03/2016 dated 11/3/2016 (amended from time\r\n                    to time) and consequential compliance obligations of the Point of Sales (POS) Person vis- à-vis-LMVIBS\r\n                </p>\r\n                <p>This Agreement (\"Agreement\") dated <u>{`${day}-${month}-${year} `}{Time(date)}</u>, (“Effective date”) for Point Of Sales Person (\"POS\" ) and LMV Insurance Broking Services Private Limited\r\n                    (Thereafter referred to as LMVIBS), sets forth the terms and conditions under which POS shall perform certain services for the Company. POS and Company may\r\n                    also be referred to individually as a “party” and together as the \"parties.\"\r\n                </p>\r\n                <p>WHEREAS, The Company is a direct Insurance Broker registered by IRDAI vide registration No 662 valid w.e.f. 31.05.{from} to 30.05.{to} and renewable thereafter\r\n                    from time to time.</p>\r\n                <p>WHEREAS, Company wishes to contract with POS to solicit the Insurance products, as may be specified by IRDAI from time to time, on the terms and conditions\r\n                    provided for herein</p>\r\n                <p>WHEREAS, POS desires to enter into an Agreement with Company for the solicitation of such Insurance product/products.</p>\r\n                <p>WHEREAS, The Company appoints the POS for the purpose of selling and servicing of Insurance policies on behalf of the Company, the Company reserves the right\r\n                    to approve or disapprove the contracting of any such POS.\r\n                </p>\r\n                <p>The Company and the POS expressly agree that the POS is not an employee of the Company and shall be considered as an Independent contractor for the purpose\r\n                    of this agreement. The POS shall not be reimbursed any expenses incurred under this agreement and shall identify their own work place, use own supplies and set\r\n                    own work hours, all at no cost to the Company.\r\n                </p>\r\n                <p>NOW,in consideration of the mutual promises and covenants herein stated, and for other good and valuable consideration, the parties hereto agree as follows:</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>1. APPOINTMENT</h6>\r\n                <p>1.1 The Company hereby appoints POS to solicit, at its own expense, new and/or renewal applications for insurance contracts (\"Policy\" or \"Policies\").</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>2. TRAINING AND QUALIFICATION REQUIREMENT FOR POST</h6>\r\n                <p>2.1 The POS person shall be at least 10th pass or attain any other qualification IRDAI may prescribe from time to time.</p>\r\n                <p>2.2 He shall be trained as per the regulatory requirements by the company.</p>\r\n                <p>2.3 The fees for the online training and examination if applicable of the POS shall be paid by the company.</p>\r\n                <p>2.3.1 The POS, in his capacity as POS, shall be responsible for assuring that all of its Producers, as well as the POS himself, comply with the following duties.</p>\r\n                <p>2.4 The POS shall appear in the online examination conducted as per the regulations and as amended and advised from time to time.</p>\r\n                <p>2.5 The POS at the time of signing of this agreement shall ensure that he /she has been certified to become a POS.</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>3. DUTIES OF POS</h6>\r\n                <p>3.1 The POS, in his capacity as POS, shall be responsible for assuring that all of its Producers, as well as the POS himself, comply with the following duties.</p>\r\n                <p>3.2 POS will comply with all laws and regulations which relate to this Agreement and shall indemnify and hold the Company harmless for its failure to do so. POS\r\n                    shall maintain in good standing, at its own cost, licenses required by all applicable statutes and regulations.</p>\r\n                <p>3.3 POS may not solicit any business except mentioned and specified by the regulations and as amended from time to time</p>\r\n                <p>3.4 POS will comply with the Company's rules and regulations relating to the solicitation of insurance business. As a material part of the consideration for the,\r\n                    making of this Agreement by the Company, POS agrees that there will be made no representations whatsoever with respect to the nature or scope of the benefits of\r\n                    the Policies sold except through and by means of the written material either prepared and furnished to POS for that purpose by the Company or approved in\r\n                    writing by the Company prior to its use. POS shall have no authority and will not make any oral or written alteration, modification, or waiver of any of the terms or\r\n                    conditions of any Policy whatsoever.\r\n                </p>\r\n                <p>3.5 POS warrants that POS will diligently and to the best of its ability ensure that the facts set forth by any applicant/prospect in any application it solicits are true and correct.</p>\r\n                <p>3.6 POS will conduct itself so as not to affect adversely the business, good standing, and reputation of the Company.</p>\r\n                <p>3.7 POS agrees not to employ or make use of any advertisement in which the Company's (or its affiliate's) name or its registered trademarks are employed without\r\n                    the prior written approval and consent of the Company. Upon request of POS during the term of this Agreement, the Company shall make available for POS's use,\r\n                    standard visiting cards and other material. POS may add, at POS's expense, to the standard advertising only its business name, business address, POS number and\r\n                    telephone number, as provided for in the advertising. No deletions or changes in the advertising copy are permissible. POS shall act solely as an independent\r\n                    contractor, of-course subject to the control and guidance of the company, and as such, shall have control on: all matters, its time and effort in the placement of the\r\n                    Policies offered hereunder. Nothing herein contained shall be construed to create the relationship of employer and employee between POS and Company.</p>\r\n                <p>3.8 POS shall indemnify and hold the Company and its officers,and employees harmless from all expenses, costs, causes of action, claims, demands, liabilities and\r\n                    damages, including reasonable attorney's fees, resulting from or growing out of any unauthorized act or transaction or any negligent act, omission or transaction by\r\n                    POS or employees of POS.\r\n                </p>\r\n                <p>3.9 No Prior Disciplinary or Criminal Proceedings. POS represents and warrants that he/she has never been convicted of any crime involving moral turpitude and\r\n                    is not disqualified as per section 42D(5) of the Insurance Act and remains Fit and Proper.\r\n                </p>\r\n                <p>3.10 Change of Address. POS shall notify Company in writing of any change of address and/or communication at least thirty (30) days prior to the effective date of\r\n                    such change.\r\n                </p>\r\n                <p>3.11 POS shall not engage or employ anyone as canvassers or agents for soliciting the insurance business.</p>\r\n                <p>3.12 Collection of Premiums. POS shall have no authority, without written permission of Company, to collect or provide receipt for premiums to customer and\r\n                    shall assist the client for compliance of section 64VB of the Insurance Act 1938. POS shall, on behalf of the Company and with the written permission of the company, collect premiums as per IRDAI norms. All premiums collected on business produced by the POS hereunder shall be submitted to the Company within\r\n                    same day of receipt by POS.\r\n                </p>\r\n                <p>3.13 To faithfully perform all duties required hereunder, to cooperate with the Company in all matters pertaining to the issuance of policies, cancellations, claims\r\n                    and to promote the best interest of the Company.</p>\r\n                <p>3.14 POS will be bound not to work for any other intermediaries or the Insurance companies. Whatever work he does in the insurance space, POS is bound to do\r\n                    through Company only.\r\n                </p>\r\n                <p>3.15 POS will ensure the compliance of FIU and obtain KYC</p>\r\n                <p>3.16 POS shall not do any claim consultancy and any such opportunity that comes in this area. He shall be further obliged to bring to the notice of the company for\r\n                    its further doing the needful in a professional manner.</p>\r\n                <p>3.17 Any financial penalty levied by the IRDAI, if it is based on the violations and non compliance by the POS shall be borne by him. Similarly if suspension,\r\n                    cancellation or withdrawal of license of the company is based on breaches/non compliance on the account of POS, the POS shall indemnify the consequential\r\n                    losses to the company.\r\n                </p>\r\n                <p>3.18 The POS shall be duty bound to cooperate with the officers of IRDAI for the purpose of inspection as may be required by IRDAI inspectors or investigating\r\n                    authority from time to time.\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>4. DUTIES OF THE COMPANY</h6>\r\n                <p>4.1 The duties of the Company shall vary depending upon the specific product being sold by POS. For all products, the Company will provide brochures and\r\n                    proposal forms or make the same available online. The Company will deliver to the customer all insurance policies and related correspondence or similar\r\n                    documents, in accordance with Company procedures. The Company shall respond in a reasonable and timely manner to inquiries and questions about the product.\r\n                    The Company shall maintain reasonable accounting, administrative, and statistical records in accordance with prudent standards of insurance record keeping,\r\n                    including premium, sale or effective date, and any other records needed to verify coverage, pay claims, or underwrite the company insurance products, of any\r\n                    insured participant covered under the policies.</p>\r\n                <p>4.2 The company shall provide administrative support including infrastructure to the POS to enable him to perform his obligation on the interest of Broking\r\n                    Company and the customer whose business has been solicited.\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>5.RESERVATIONS OF RIGHTS</h6>\r\n                <p>5.1 The Company reserves the right to reject any and all applications for its Policies submitted by POS if they are not found to be of the order of merit required by\r\n                    the customer or the company or the Insurance Company.\r\n                </p>\r\n                <p>5.2 The Company reserves the right to discontinue writing or offering any of the Policies which become subject to this Agreement upon sixty (60) days notice to\r\n                    POS (or the number of days required by law in the POS's state of domicile).\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>6.MAINTENANCE OF RECORDS</h6>\r\n                <p>6.1 Company and POS each shall maintain records of transactions with individual insured.</p>\r\n                <p>6.2 The Company, its employees, or authorized representatives may have unrestricted access to records and may audit, inspect and examine at reasonable times,\r\n                    upon reasonable notice and during regular business hours at POS's place of business, all books and records,\r\n                </p>\r\n                <p>6.3 During the term of the Agreement, any extensions of it and for five (5) years thereafter, the Company shall strictly adhere to keeping the Confidential\r\n                    information about the POS safe and private. The POS shall also adhere to keeping the Company Information Confidential, which also includes matter(s) - written or\r\n                    unwritten, financial and accounting details, business production,methods of business operations,marketing,strategic planning or propritory information of any\r\n                    kind or nature whatsoever, including the trade secrets. Confidential Information does not include information that: (i) is already known to the recipient at the time\r\n                    of disclosure to it; (ii) is in the public domain or subsequently becomes publicly available; (iii) is provided to the recipient by a third party who is under no such\r\n                    obligation of confidentiality; or (iv) is independently developed by the recipient. Each party shall take necessary and reasonable precautions to prevent\r\n                    unauthorized disclosure of Confidential Information and shall require all of its officers, employees, and other personnel to whom it is necessary to disclose the\r\n                    same, or to whom the same has been disclosed, to keep this Confidential Information private. It is understood, however, that certain \"Confidential Information\"\r\n                    may be required to be filed with State and Central regulatory agencies in accordance with their reporting requirements. Neither party shall make use of the name\r\n                    or service mark(s) of the other, including use of the name or service mark(s) of any marketing, enrollment, or other public relations material without prior written\r\n                    approval of the other party.\r\n                </p>\r\n                <p>6.4 There shall be restriction on use of LMVIBS logo and letterhead by POS unless approved by LMVIBS in writing.</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>7.COMPENSATION</h6>\r\n                <p>7.1 Compensation for each policy written hereunder shall be made by the Company to POS in accordance with the regulation and as amended from time to time.</p>\r\n                <p>7.2 Compensation due under this Agreement shall be paid to POS within 180 days from the end of each calendar quarter in which the Company receives premium\r\n                    with respect to its Policies or as may otherwise be agreed upon in writing.\r\n                </p>\r\n                <p>7.3 Under all circumstances, the Company shall have the right to offset overpayments to POS against amounts due to POS.</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>8. EFFECTIVE DATES, TERM AND TERMINATION</h6>\r\n                <p>8.1 This Agreement shall commence on the effective date first stated above and shall continue in force until terminated pursuant to this Article. Upon termination,\r\n                    all business produced by the POS shall remain in full force and effect until the natural expiration or prior cancellation of such business, and shall be subject to all\r\n                    terms and conditions of this Agreement. Upon termination, the all data related to policy holder will be handed over to company by POS\r\n                </p>\r\n                <p>8.2 This Agreement will terminate automatically upon the occurrence of any of the following events by POS, and upon such occurrence the parties shall be\r\n                    obligated to make only those payments the right to which accrued to the date of termination:\r\n                </p>\r\n                <p>8.2.1 Conviction of a felony by POS;</p>\r\n                <p>8.2.2 Misappropriation (or failure to remit) any funds or property due the Company from POS;</p>\r\n                <p>8.2.3 Determination that POS is not in compliance with Company underwriting guidelines or the terms of this Agreement and POS has failed to correct the problem within 10 days of the Company providing written notice of same;</p>\r\n                <p>8.2.4 In the event of fraud or material breach of any of the conditions or provisions of this Agreement on the part of either party, the other party may terminate the\r\n                    Agreement immediately upon written notice.</p>\r\n                <p>8.2.5 Fails to comply with directions of the Company.</p>\r\n                <p>8.2.6 Furnish wrong information or conceals the information or fails to disclose the material facts of the policy to the policy holder</p>\r\n                <p>8.2.7 Fails to resolve complaints, unless the circumstances are beyond his control, emanating from the business procured by him and persons he deals with</p>\r\n                <p>8.2.8 Indulges in inducement in cash or kind with client or any other insurance intermediary/agent/insurer.</p>\r\n                <p>8.2.9 Fails to pay any penalty levied on his account.</p>\r\n                <p>8.3.0 Fails to carry out his obligations as prescribed in the agreement and in the provisions of: Act/regulations/circulars or guidelines by IRDAI from time to time.</p>\r\n                <p>8.3.1 Acts in a manner prejudice to the interest of the company or the client.</p>\r\n                <p>8.3.2 Acts in a manner that amounts to diverting funds of his Group/Affiliates or associates rather than engaging in the activity of soliciting and servicing insurance\r\n                    business.</p>\r\n                <p>8.3.3 Is found guilty of fraud or is charged or convicted in any criminal act.</p>\r\n                <p>8.3.4 In the event of a material breach by a party to this Agreement, the non-breaching party may terminate this Agreement after providing thirty (30) days written\r\n                    notice to the breaching party to cure such breach. Upon such occurrence, a party shall be obligated to make only those payments the right which accrued to the\r\n                    date of termination.</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>9.GENERAL PROVISIONS</h6>\r\n                <p>9.1 Failure of either party to insist upon the performance of any of the terms of this Agreement or to declare a forfeiture or termination in the event of nonperformance by the other party shall not constitute a waiver of performance required hereunder.</p>\r\n                <p>9.2 No assignment, transfer or disposal of any interest that a party may have pursuant to this Agreement shall be made at any time without prior written approval\r\n                    of the other party. Notwithstanding the foregoing, Company may assign any and all interests under this Agreement to a parent or affiliate, or due to merger or\r\n                    acquisition without the consent of POS.\r\n                </p>\r\n                <p>9.3 This Agreement shall be binding upon the administrators and executors, successors and permitted assignees of the parties hereto.</p>\r\n                <p>9.4 No Amendment or modification of this Agreement shall be valid, or of any force or effect, unless the same be in writing and acknowledged and signed by the Company and POS.</p>\r\n                <p>9.5 Any disputes, claims or counterclaims arising from or relating to this Agreement shall be subject to the Jurisdiction of the courts in India with first preference\r\n                    exercised to resolve by Alternative dispute resolution Indian system.\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>10.INTELLECTUAL PROPERTY</h6>\r\n                <p>The POS agrees, warrants and undertakes that it shall take steps to safeguard the company’s intellectual property rights, if in its possession or the company’s\r\n                    Products, Services and software are not infringed, passed off, diluted, reverse- engineered, hacked into, misappropriated, tampered with and/or copied by the POS,\r\n                    and/or its directors, officers, employees, agents, representatives, subsidiaries, associates, etc.</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>11.INDEMNITY</h6>\r\n                <p>The POS, shall at its own expense, indemnify, defend and hold harmless the company and its officers, directors, employees, representatives and agents, against any\r\n                    third party claim, demand, suit, action, or other proceeding brought against the company or its officers, directors, employees, representatives or agents and against\r\n                    all damages, awards, settlements, liabilities, losses, costs and expenses related thereto (including without limitation attorneys’ fees) to the extent that such claim\r\n                    suit, action or other proceedings is based on or arises from any deficiency in service, by the POS, as per the scope of work or any other breach of terms of this\r\n                    Agreement.\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>12.COMPLIANCE WITH THE LAWS</h6>\r\n                <p>Each party represents that it shall abide by and observes all applicable laws, rules, regulations.</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>13. GOVERNING LAW AND DISPUTE RESOLUTION</h6>\r\n                <p>Any dispute, controversy or claims arising out of or relating to this Agreement or the breach, termination or invalidity thereof, shall be settled by arbitration in\r\n                    accordance with the provisions of the Arbitration and Conciliation Act, 1996. The Arbitral Tribunal shall compose of a sole arbitrator to be appointed by both the\r\n                    Parties in mutual consent. The place of arbitration shall be Telangana and any award whether interim or final, shall be made, and shall be deemed for all purposes\r\n                    between the parties to be made, in Telangana. The arbitral procedure shall be conducted in the English language and any award or awards shall be rendered in\r\n                    English. The provisions of this Agreement shall be governed by and construed in accordance with Indian law. Only the courts at Telangana shall have exclusive\r\n                    jurisdiction in all matters arising under this Agreement.\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>14. SEVERABILITY</h6>\r\n                <p>If any provision of this Agreement is held illegal or unenforceable by any court or other authority of competent jurisdiction, such provision shall be deemed\r\n                    severable from the remaining provisions of this Agreement and shall not affect or impair the validity or enforceability of the remaining provision of this\r\n                    Agreement.\r\n                </p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h6>15. FORCE MAJEURE</h6>\r\n                <p>Neither Party shall be under any liability for any failure to perform any of its obligations under this Agreement due to Force Majeure. For the purpose of this\r\n                    clause, “Force Majeure” means fire, explosion, flood, Act of God, act of terrorism, war, rebellion, riots, or sabotage or events or circumstances which are wholly\r\n                    outside the control of the party affected thereby. Where, such event continues to exist for a continuous period of 3 months or more, the Parties hereby agrees that\r\n                    the Agreement shall stand terminated.\r\n                </p>\r\n            </div>\r\n            <div className=\"form-check container\">\r\n                <input type=\"checkbox\" value={checked} className=\"form-check-input\" onChange={onCheckHandler}/>\r\n                <label>This Agreement constitutes the entire Agreement between the parties with respect to its matter.<br />\r\n                    IN WHERE OF, intending to be legally bound hereby, the parties hereto have executed this Agreement.\r\n                </label>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n               {checked ? <input type=\"submit\" className=\"btn btn-primary\" onClick={onSubmitHandler}/> : null} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosTerms;\r\n","function parseJwt(token){\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n};\r\n\r\nexport default parseJwt;\r\n","/*eslint-disable */\r\nimport React, { useState,useEffect,useRef,useContext } from 'react';\r\nimport { DefaultInput, Select, PermanentInput } from '../pos/input';\r\nimport { Formik, Form,Field} from 'formik';\r\nimport { CustomerValidation, ValidationWithPermanentAddress } from '../pos/validation';\r\nimport {AiFillStar} from 'react-icons/ai';\r\nimport CrmforPosService from '../../src/config/index';\r\nimport axios from 'axios';\r\nimport parseJwt from '../jwtDecode';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../pos/posHome';\r\nimport {PresentCustomerAddress,PermanentCustomerAddress,CustomerDetails,CustomerIdentity} from './helpers'\r\n\r\nfunction Addcustomer() {\r\n    const user = useContext(UserContext);\r\n    const history = useHistory();\r\n    const imageRef = useRef(null);\r\n    const imageRef1 = useRef(null);\r\n    const imageRef2 = useRef(null);\r\n    const imageRef3 = useRef(null);\r\n    const checkRef = useRef(null);\r\n    const [checked, setChecked] = useState(false);\r\n    const [location,setLocation] = useState([]);\r\n    const [branch,setBranches] = useState([]);\r\n    const [files,setFiles] = useState({});\r\n    const [id,setId] = useState('');\r\n    const [custData,setCustData] = useState([]);\r\n    useEffect(async()=>{\r\n        const aboutController = new AbortController()\r\n        const token = sessionStorage.getItem('token');\r\n        setId(await parseJwt(token))\r\n         axios.get(CrmforPosService.CrmforPosService.baseURL + '/api/pos/customer/get-location',{headers:{Authorization:token}})\r\n        .then(res => setLocation(res.data))\r\n        .catch(err=>console.log(err))\r\n        return ()=>{\r\n            aboutController.abort();\r\n        }\r\n    }, [])\r\n    useEffect(()=>{\r\n        const token = sessionStorage.getItem('token');\r\n        const aboutController = new AbortController()\r\n        if(user){\r\n            axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/get-customers/${user}`,{headers:{Authorization:token}})\r\n            .then(res=>{\r\n                if(res.data){\r\n                    setCustData(res.data)\r\n                }\r\n            })\r\n            .catch(err=>console.log(err))\r\n            return ()=>{\r\n                aboutController.abort();\r\n            }\r\n        }else{\r\n            return false;\r\n        }\r\n    },[])\r\n    const initialValues = {\r\n        title: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        mobile_number: '',\r\n        email: '',\r\n        dob: '',\r\n        pancard: '',\r\n        gender: '',\r\n        locations : '',\r\n        branch : '',\r\n        aadhar_number: '',\r\n        present_address1: '',\r\n        present_address2: '',\r\n        present_country: '',\r\n        present_states: '',\r\n        present_city: '',\r\n        present_district: '',\r\n        present_pincode: '',\r\n        permanent_address1: '',\r\n        permanent_address2: '',\r\n        permanent_country: '',\r\n        permanent_states: '',\r\n        permanent_city: '',\r\n        permanent_district: '',\r\n        permanent_pincode: ''\r\n    }\r\n    \r\n    const presentCustomerAddress = PresentCustomerAddress();\r\n\r\n    const permanentCustomerAddress = PermanentCustomerAddress();\r\n\r\n    const customerDetails = CustomerDetails();\r\n\r\n    const customerIdentity = CustomerIdentity();\r\n\r\n    const selectBranchHandler=async(e,formik)=>{\r\n        const token = sessionStorage.getItem('token');\r\n        formik.handleChange(e);\r\n        await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/get-branches/${e.target.value}`,{headers:{Authorization : token}})\r\n               .then(res => setBranches(res.data))\r\n               .catch(err => console.log(err))\r\n    }\r\n\r\n    const onSubmit = async(values,onSubmitProps) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const customerExists = {\r\n            posId : user,\r\n            aadhar : values.aadhar_number,\r\n            pancard : values.pancard\r\n        }\r\n        axios.post(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/customer-details/exists`,customerExists,{headers:{Authorization : token}})\r\n        .then(res=>{\r\n            if(res.data === 'No duplicates found'){\r\n                const uploadFiles =  checkValidFiles();\r\n                if(uploadFiles){\r\n                    const pos_id ={\r\n                        pos_id : id.pos_id\r\n                    }\r\n                    const customerDetails = {...values,...files,...pos_id};\r\n                    axios.post(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/customer-details`,customerDetails,{headers:{Authorization:token}})\r\n                    .then(res=>{\r\n                        if(res.data.status === 200){\r\n                            alert('Customer Details Added Successfully');\r\n                            history.push({\r\n                                pathname : '/home/cutomer-details',\r\n                                state : res.data\r\n                            })\r\n                            setChecked(false);\r\n                            checkRef.current = true;\r\n                            onSubmitProps.setSubmitting(false);\r\n                            onSubmitProps.resetForm();\r\n                        }else{\r\n                            alert(data.status.message)\r\n                        }\r\n                    })\r\n                    .catch(err=>console.log(err))\r\n                }\r\n            }else{\r\n                window.alert(res.data.message);\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkValidFiles =()=> {\r\n        const fileInputsArr = [\"aadhar\", \"pan\", \"photo\", \"passbook\"]\r\n        const errorArr = []\r\n        for (let file of fileInputsArr) {\r\n            if(files[file] === undefined){\r\n                errorArr.push(file)\r\n            }\r\n        }\r\n        if(errorArr.length > 0){\r\n            alert(`please upload files ${errorArr}`)\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const classes = \"col-12 col-md-6 col-lg-4\"\r\n    const options = ['mr', 'miss', 'mrs'];\r\n    const gender = ['male', 'female'];\r\n  \r\n\r\n    const checkSelectorHandler = () => {\r\n        setChecked(value => !value);\r\n    }\r\n\r\n    const uploadFile=(e)=>{\r\n        const {name} = e.target;\r\n        const selected = e.target.files[0].size\r\n        if (selected >= 100000) {\r\n            window.alert(`${name} File too big max 100KB`);\r\n            e.target.value = null\r\n        }else{\r\n            let file = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.readAsBinaryString(file);\r\n            reader.onload = (e)=>{\r\n                setFiles(preValue=>({\r\n                    ...preValue,\r\n                    [name] : window.btoa(e.target.result)\r\n                }))\r\n            }\r\n        }  \r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize={true}\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={checked ? CustomerValidation : ValidationWithPermanentAddress}\r\n            >\r\n                {formik => {\r\n                    return (\r\n                        <Form autoComplete=\"off\">\r\n                            <div className=\"d-flex align-items-center justify-content-center my-2\"><h4>Add Customer</h4></div>\r\n                            <div className=\"d-flex flex-wrap col-12\">\r\n                                <Select name=\"title\" label=\"Title\" options={options} classes={classes} required\r\n                                    className={formik.touched.title && formik.errors.title ? \"is-invalid form-control\" : \"form-control text-capitalize\"}\r\n                                />\r\n                                {customerDetails.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                                <Select name=\"gender\" label=\"Gender\" options={gender} classes={classes} required\r\n                                    className={formik.touched.gender && formik.errors.gender ? \"is-invalid form-control\" : \"form-control text-capitalize\"}\r\n                                />\r\n                                {customerIdentity.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                                <div className=\"form-group p-1\" className={classes}>\r\n                                    <label htmlFor=\"location\" className=\"h6\">Location<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup></label>\r\n                                    <Field as=\"select\" name=\"locations\"   className={formik.touched.locations && formik.errors.locations ? \"is-invalid form-control\": \"text-capitalize form-control\"} onChange={(e)=>selectBranchHandler(e,formik)}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {location.map((element,index)=>{\r\n                                        return(\r\n                                            <option className=\"text-uppercase\" key={index} value={element.location}>{element.location}</option>\r\n                                        )\r\n                                    })}\r\n                                    </Field>\r\n                                    <div className=\"help-text\">\r\n                                        {formik.touched.locations && formik.errors.locations ? <div className=\"text-danger\">{formik.errors.locations}\r\n                                        </div> : null}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group p-1\" className={classes}>\r\n                                    <label htmlFor=\"location\" className=\"h6\">Branch<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup></label>\r\n                                    <Field as=\"select\" name=\"branch\"className={formik.touched.branch && formik.errors.branch ? \"is-invalid form-control\":\"text-capitalize form-control\"}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {branch&&branch.length>0 ? branch.map((element,index)=>{\r\n                                        return(\r\n                                            <option value={element.branch} className=\"text-uppercase\" key={index}>{element.branch}</option>\r\n                                        )\r\n                                    }):null}\r\n                                </Field>\r\n                                    <div className=\"help-text\">\r\n                                        {formik.touched.branch && formik.errors.branch ? <div className=\"text-danger\">{formik.errors.branch}\r\n                                        </div> : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center my-2\"><h5>Present Address</h5></div>\r\n                            <div className=\"d-flex flex-wrap col-12\">\r\n                                {presentCustomerAddress.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required={element.required}\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input ref={checkRef} type=\"checkbox\" className=\"form-check-input ml-lg-3\" id=\"input_checkbox\" value={checked} onChange={checkSelectorHandler} />\r\n                                <label htmlFor=\"input_checkbox\" className=\"ml-lg-5\">Check if your present address is your permanent address</label>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center my-2\"><h5>Permanent Address</h5></div>\r\n                            <div className=\"d-flex flex-wrap col-12\">\r\n                                {checked ? permanentCustomerAddress.map((element, index) => {\r\n                                    return <PermanentInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} className=\"form-control\" value={formik.values[element.presentName]} readOnly />\r\n                                }) : permanentCustomerAddress.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required={element.required}\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center my-2\"><h5>File Uploads</h5></div>\r\n                            <div className=\"d-flex flex-wrap\">\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                                    <label className=\"h6\">Aadhar Card<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup></label><br />\r\n                                    <input id=\"file\" ref={imageRef} name=\"aadhar\" type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e)=>uploadFile(e)}/>\r\n                                </div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                                    <label className=\"h6\">Pancard<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup></label><br />\r\n                                    <input id=\"file\" ref={imageRef1} name=\"pan\"  type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e)=>uploadFile(e)}/>\r\n                                </div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                                    <label className=\"h6\">Photo<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup></label><br />\r\n                                    <input id=\"file\" ref={imageRef2} name=\"photo\" type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e)=>uploadFile(e)}/>\r\n                                </div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                                    <label className=\"h6\">Bank Pass Book<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }}/></sup></label><br />\r\n                                    <input id=\"file\" ref={imageRef3} name=\"passbook\" type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e)=>uploadFile(e)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"submit\" className=\"btn btn-dark ml-lg-3 ml-md-4 my-2\"/>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Addcustomer;\r\n","export const PresentCustomerAddress = ()=>{\r\n    return(\r\n        [\r\n            { type: \"text\", name: \"present_address1\", label: \"Address1\", required: true },\r\n            { type: \"text\", name: \"present_address2\", label: \"Address2\", required: false },\r\n            { type: \"text\", name: \"present_country\", label: \"Country\", required: true },\r\n            { type: \"text\", name: \"present_states\", label: \"State\", required: true },\r\n            { type: \"text\", name: \"present_city\", label: \"City\", required: true },\r\n            { type: \"text\", name: \"present_district\", label: \"District\", required: true },\r\n            { type: \"number\", name: \"present_pincode\", label: \"Pincode\", required: true }\r\n        ]\r\n    )\r\n}\r\n\r\nexport const PermanentCustomerAddress = ()=>{\r\n    return(\r\n        [\r\n            { type: \"text\", name: \"permanent_address1\", presentName : \"present_address1\", label: \"Address1\", required: true },\r\n            { type: \"text\", name: \"permanent_address2\",presentName : \"present_address2\", label: \"Address2\", required: false },\r\n            { type: \"text\", name: \"permanent_country\",presentName : \"present_country\", label: \"Country\", required: true },\r\n            { type: \"text\", name: \"permanent_states\",presentName : \"present_states\", label: \"State\", required: true },\r\n            { type: \"text\", name: \"permanent_city\",presentName : \"present_city\", label: \"City\", required: true },\r\n            { type: \"text\", name: \"permanent_district\",presentName : \"present_district\", label: \"District\", required: true },\r\n            { type: \"number\", name: \"permanent_pincode\",presentName : \"present_pincode\", label: \"Pincode\", required: true }\r\n        ]\r\n    )\r\n}\r\n\r\nexport const CustomerDetails = ()=>{\r\n    return(\r\n        [\r\n            { type: \"text\", name: \"first_name\", label: \"First Name\" },\r\n            { type: \"text\", name: \"last_name\", label: \"Last Name\" },\r\n            { type: \"date\", name: \"dob\", label: \"Date Of Birth\" },\r\n            { type: \"number\", name: \"mobile_number\", label: \"Mobile Number\" },\r\n            { type: \"email\", name: \"email\", label: \"Email\" },\r\n        ]\r\n    )\r\n}\r\n\r\nexport const CustomerIdentity = ()=>{\r\n    return(\r\n        [\r\n            { type: \"text\", name: \"pancard\", label: \"Pancard\" },\r\n            { type: \"number\", name: \"aadhar_number\", label: \"Aadhar Number\" },\r\n        ]\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaEdit,FaSearch } from 'react-icons/fa';\r\nimport { UserContext } from '../pos/posHome';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\n\r\nfunction CustomerDetails() {\r\n    const user = useContext(UserContext);\r\n    const redirectEditPage = useHistory();\r\n    const [data, setData] = useState([]);\r\n    const [searchData,setSearchData] = useState([]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(async () => {\r\n        if (user) {\r\n            const token = sessionStorage.getItem('token');\r\n            await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/get-customers/${user}`,{headers:{Authorization:token}})\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        setData(res.data);\r\n                        setSearchData(res.data);\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            return false;\r\n        }\r\n    }, [user])\r\n   \r\n    const getCustomerIdHandler = async (id, user) => {\r\n        const token = sessionStorage.getItem('token');\r\n        await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/get-customer-details/${user}/${id}`,{headers:{Authorization:token}})\r\n            .then(res => {\r\n                if (res.data) {\r\n                    console.log(res.data);\r\n                    redirectEditPage.push({\r\n                        pathname: '/home/edit-customer-details',\r\n                        state: res.data\r\n                    })\r\n                } else {\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const onSearchHandle = async(e)=>{\r\n        let result = [];\r\n        console.log('target',e.target.value.length)\r\n        if(e.target.value && data){\r\n            result = data.filter(\r\n                (customer) => \r\n            customer.customer_id && customer?.customer_id.toString().toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n            customer.mobile_number && customer?.mobile_number.toString().toLowerCase().includes(e.target.value.toLowerCase()))\r\n        }\r\n        // console.log('res',result);\r\n        if(result.length === 0){\r\n            result=['none'];\r\n        }\r\n        if(e.target.value.length === 0){\r\n            result=data;\r\n        }\r\n        setSearchData(result);\r\n    }\r\n    console.log('search',searchData);\r\n\r\n    return (\r\n        <div className=\"container-fluid m-auto\">\r\n            <div className=\"d-flex justify-content-center my-3\"><h4 className=\"text-dark\">Customer Details</h4></div>\r\n            <div className=\"d-flex flex-row justify-content-end\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\"><FaSearch/></span>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control text-capitalize col-8 col-md-6 col-lg-4 col-xl-3\" autoComplete='none' placeholder=\"Search by customer ID or mobile number\" onChange={(e)=>onSearchHandle(e)}/>\r\n            </div>\r\n            <div className=\"table-responsive mt-3\">\r\n                <table className=\"table table-hover table-striped col-12 p-0\" style={{ borderCollapse: 'initial' }}>\r\n                    <thead className=\"text-white\">\r\n                        <tr>\r\n                            <th>S.no</th>\r\n                            <th>Customer&nbsp;ID</th>\r\n                            <th>Name</th>\r\n                            <th>Mobile&nbsp;Number</th>\r\n                            <th>Aadhar&nbsp;Number</th>\r\n                            <th>Pan&nbsp;Number</th>\r\n                            <th>Edit</th>\r\n                        </tr>\r\n                    </thead>\r\n                        {searchData.length > 0 && searchData[0] !== 'none' ? <tbody>\r\n                        {searchData.map((element, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td className=\"text-uppercase\">{element.customer_id}</td>\r\n                                    <td className=\"text-capitalize\">{`${element.first_name} ${element.last_name}`}</td>\r\n                                    <td>{element.mobile_number}</td>\r\n                                    <td>{element.aadhar_number}</td>\r\n                                    <td className=\"text-uppercase\">{element.pancard}</td>\r\n                                    <td className=\"text-center\">\r\n                                        <FaEdit onClick={() => getCustomerIdHandler(element.customer_id, user)} title=\"Edit\" size=\"1.3em\" style={{ color: \"black\" }} />\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>:\r\n                        searchData[0] === 'none' ? <tbody><tr><td colSpan=\"7\">No data found</td></tr></tbody> : <tbody><tr><td colSpan=\"7\" className=\"text-center\">Loading...</td></tr></tbody>}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerDetails\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { CustomerValidation, ValidationWithPermanentAddress } from '../pos/validation';\r\nimport { DefaultInput, Select, PermanentInput } from '../pos/input';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport { PresentCustomerAddress, PermanentCustomerAddress, CustomerDetails, CustomerIdentity } from './helpers';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../../src/config/index';\r\nimport FormatDate from '../FormatDate';\r\nimport { UserContext } from '../pos/posHome';\r\n\r\nfunction EditCustomerDetails() {\r\n    const imageRef = useRef(null);\r\n    const user = useContext(UserContext);\r\n    const history = useLocation();\r\n    const redirectHomePage = useHistory();\r\n    const [checked, setChecked] = useState(false);\r\n    const [location, setLocation] = useState([]);\r\n    const [branch, setBranches] = useState([]);\r\n    const [uploadAadhar, setUploadAadhar] = useState(true);\r\n    const [uploadPan, setUploadPan] = useState(true);\r\n    const [uploadPhoto, setUploadPhoto] = useState(true);\r\n    const [uploadPassbook, setUploadPassbook] = useState(true);\r\n    const [files,setFiles] = useState({});\r\n    const checkRef = useRef();\r\n\r\n    useEffect(async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        await axios.get(CrmforPosService.CrmforPosService.baseURL + '/api/pos/customer/get-location',{headers:{Authorization:token}})\r\n            .then(res => setLocation(res.data))\r\n            .catch(err => console.log(err))\r\n    }, [history])\r\n\r\n    // console.log(history.state)\r\n    const initialValues = {\r\n        custId: history.state[0].customer_id,\r\n        title: history.state[0].title,\r\n        first_name: history.state[0].first_name,\r\n        last_name: history.state[0].last_name,\r\n        mobile_number: history.state[0].mobile_number,\r\n        email: history.state[0].email,\r\n        dob: FormatDate(history.state[0].dob),\r\n        pancard: history.state[0].pancard,\r\n        gender: history.state[0].gender,\r\n        locations: history.state[0].location,\r\n        branch: history.state[0].branch,\r\n        aadhar_number: history.state[0].aadhar_number,\r\n        present_address1: history.state[0].present_line1,\r\n        present_address2: history.state[0].present_line2,\r\n        present_country: history.state[0].present_country,\r\n        present_states: history.state[0].present_state,\r\n        present_city: history.state[0].present_city,\r\n        present_district: history.state[0].present_district,\r\n        present_pincode: history.state[0].present_pincode,\r\n        permanent_address1: history.state[0].permanent_address1,\r\n        permanent_address2: history.state[0].permanent_address2,\r\n        permanent_country: history.state[0].permanent_country,\r\n        permanent_states: history.state[0].permanent_states,\r\n        permanent_city: history.state[0].permanent_city,\r\n        permanent_district: history.state[0].permanent_distric,\r\n        permanent_pincode: history.state[0].permanent_pincode\r\n    }\r\n    useEffect(() => {\r\n        // console.log('Do something after counter has changed', uploadAadhar);\r\n    }, [uploadAadhar,uploadPan,uploadPassbook,uploadPhoto])\r\n\r\n    const onSubmit = (values) => {\r\n        const token  = sessionStorage.getItem('token');\r\n        const customerExists = {\r\n            posId : user,\r\n            aadhar : values.aadhar_number,\r\n            pancard : values.pancard,\r\n            customerId : values.custId\r\n        }\r\n        axios.post(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/update-customer-details/exists`,customerExists,{headers:{Authorization:token}})\r\n        .then(res=>{\r\n            if(res.data === 'not found'){\r\n                axios.put(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/update-customer-details/${initialValues.custId}/${user}`,values,{headers:{Authorization:token}})\r\n                .then(res=>{\r\n                    if(res.data === 'updated successfully'){\r\n                        window.alert('customer details updated successfully');\r\n                        redirectHomePage.push('/home/reports-count')\r\n                    }\r\n                });\r\n            }else{\r\n                window.alert('Customer details already exists')\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    const classes = \"col-12 col-md-6 col-lg-4\"\r\n    const options = ['mr', 'miss', 'mrs'];\r\n    const gender = ['male', 'female'];\r\n\r\n    const presentCustomerAddress = PresentCustomerAddress();\r\n\r\n    const permanentCustomerAddress = PermanentCustomerAddress();\r\n\r\n    const customerDetails = CustomerDetails();\r\n\r\n    const customerIdentity = CustomerIdentity();\r\n\r\n    const selectBranchHandler = async (e, formik) => {\r\n        const token = sessionStorage.getItem('token');\r\n        formik.handleChange(e);\r\n        await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/get-branches/${e.target.value}`,{headers:{Authorization:token}})\r\n            .then(res => setBranches(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const checkSelectorHandler = () => {\r\n        setChecked(value => !value);\r\n    }\r\n    \r\n\r\n    useEffect(async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        if (initialValues.branch !== '') {\r\n            await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/get-branches/${initialValues.locations}`,{headers:{Authorization:token}})\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n                    setBranches(res.data);\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }, [initialValues.locations])\r\n\r\n    useEffect(async () => {\r\n        if (initialValues.permanent_address1 === '') {\r\n            checkRef.current.checked = true\r\n            setChecked(value => !value)\r\n        }\r\n    }, [initialValues.locations]);\r\n\r\n    const deleteCustomerAadhar =() => {\r\n        setUploadAadhar(value=>!value);\r\n    }\r\n\r\n    const deleteCustomerPan = () => {\r\n        setUploadPan(value=>!value);\r\n    }\r\n\r\n    const deleteCustomerPhoto = () => {\r\n        setUploadPhoto(value=>!value);\r\n    }\r\n\r\n    const deleteCustomerPassBook = () => {\r\n        setUploadPassbook(value=>!value);\r\n    }\r\n\r\n    function uploadFile(e){\r\n        const {name} = e.target;\r\n        const selected = e.target.files[0].size;\r\n        let image;\r\n        if (selected >= 100000) {\r\n            window.alert(`${name} File too big max 100KB`);\r\n            e.target.value = null\r\n        }else{\r\n            let file = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.readAsBinaryString(file);\r\n            reader.onload = (e)=>{\r\n                image = window.btoa(e.target.result);\r\n            }\r\n            return new Promise(resolve => {\r\n                setTimeout(() => {\r\n                  resolve(image);\r\n                }, 2000);\r\n              });\r\n        }\r\n    }\r\n    \r\n    const uploadAadharFile=async(e)=>{\r\n        const token = sessionStorage.getItem('token');\r\n        const result = await uploadFile(e);\r\n       const aadhar ={\r\n           aadhar : result\r\n       }\r\n        setUploadAadhar(value=>!value);\r\n        axios.put(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/update-aadhar/${initialValues.custId}/${user}`,aadhar,{headers:{Authorization:token}})\r\n        .then(res=>{\r\n            if(res.data === 'successfull'){\r\n                // window.alert('updated Successfully');\r\n            }else{\r\n                window.alert('failed');\r\n            }\r\n        })\r\n    }\r\n  \r\n    const uploadPanFile=async(e)=>{\r\n        const token = sessionStorage.getItem('token');\r\n        const result =await uploadFile(e);\r\n        const pan ={\r\n            pan : result\r\n        }\r\n        setUploadPan(value=>!value);\r\n        axios.put(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/update-pan/${initialValues.custId}/${user}`,pan,{headers:{Authorization:token}})\r\n        .then(res=>{\r\n            if(res.data === 'successfull'){\r\n                return true;\r\n            }else{\r\n                window.alert('failed');\r\n            }\r\n        })\r\n    }\r\n    const uploadPhotoFile=async(e)=>{\r\n        const token = sessionStorage.getItem('token');\r\n        const result =await uploadFile(e);\r\n        const photo ={\r\n            photo : result\r\n        }\r\n        setUploadPhoto(value=>!value);\r\n        axios.put(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/update-photo/${initialValues.custId}/${user}`,photo,{headers:{Authorization:token}})\r\n        .then(res=>{\r\n            if(res.data === 'successfull'){\r\n                return true;\r\n            }else{\r\n                window.alert('failed');\r\n            }\r\n        })\r\n    }\r\n    const uploadPassbookFile=async(e)=>{\r\n        const token = sessionStorage.getItem('token');\r\n        const result =await uploadFile(e);\r\n        const passbook ={\r\n            passbook : result\r\n        }\r\n        setUploadPassbook(value=>!value);\r\n        axios.put(CrmforPosService.CrmforPosService.baseURL+`/api/pos/customer/update-passbook/${initialValues.custId}/${user}`,passbook,{headers:{Authorization:token}})\r\n        .then(res=>{\r\n            if(res.data === 'successfull'){\r\n                return true;\r\n            }else{\r\n                window.alert('failed');\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={checked ? CustomerValidation : ValidationWithPermanentAddress}\r\n            >\r\n                {formik => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"d-flex align-items-center justify-content-center my-2\"><h4>Update Customer Details</h4></div>\r\n                            <div className=\"d-flex flex-wrap col-12\">\r\n                                <Select name=\"title\" label=\"Title\" options={options} classes={classes} required\r\n                                    className={formik.touched.title && formik.errors.title ? \"is-invalid form-control\" : \"form-control text-capitalize\"}\r\n                                />\r\n                                {customerDetails.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                                <Select name=\"gender\" label=\"Gender\" options={gender} classes={classes} required\r\n                                    className={formik.touched.gender && formik.errors.gender ? \"is-invalid form-control\" : \"form-control text-capitalize\"}\r\n                                />\r\n                                {customerIdentity.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                                <div className=\"form-group p-1\" className={classes}>\r\n                                    <label htmlFor=\"location\" className=\"h6\">Location<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label>\r\n                                    <Field as=\"select\" name=\"locations\" className={formik.touched.locations && formik.errors.locations ? \"is-invalid form-control\" : \"text-capitalize form-control\"} onChange={(e) => selectBranchHandler(e, formik)}>\r\n                                        <option value=\"\">Select</option>\r\n                                        {location.map((element, index) => {\r\n                                            return (\r\n                                                <option className=\"text-uppercase\" key={index} value={element.location}>{element.location}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Field>\r\n                                    <div className=\"help-text\">\r\n                                        {formik.touched.locations && formik.errors.locations ? <div className=\"text-danger\">{formik.errors.locations}\r\n                                        </div> : null}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group p-1\" className={classes}>\r\n                                    <label htmlFor=\"location\" className=\"h6\">Branch<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label>\r\n                                    <Field as=\"select\" name=\"branch\" className={formik.touched.branch && formik.errors.branch ? \"is-invalid form-control\" : \"text-capitalize form-control\"}>\r\n                                        <option value=\"\">Select</option>\r\n                                        {branch && branch.length > 0 ? branch.map((element, index) => {\r\n                                            return (\r\n                                                <option value={element.branch} className=\"text-uppercase\" key={index}>{element.branch}</option>\r\n                                            )\r\n                                        }) : null}\r\n                                    </Field>\r\n                                    <div className=\"help-text\">\r\n                                        {formik.touched.branch && formik.errors.branch ? <div className=\"text-danger\">{formik.errors.branch}\r\n                                        </div> : null}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-4\">\r\n                                    <label htmlFor=\"customerId\">Customer Id</label>\r\n                                    <input type=\"text\" value={initialValues.custId} className=\"form-control\" readOnly />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center my-2\"><h5>Present Address</h5></div>\r\n                            <div className=\"d-flex flex-wrap col-12\">\r\n                                {presentCustomerAddress.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required={element.required}\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input ref={checkRef} type=\"checkbox\" className=\"form-check-input ml-lg-3\" id=\"input_checkbox\" value={checked} onChange={checkSelectorHandler} />\r\n                                <label htmlFor=\"input_checkbox\" className=\"ml-lg-5\">Check if your present address is your permanent address</label>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center my-2\"><h5>Permanent Address</h5></div>\r\n                            <div className=\"d-flex flex-wrap col-12\">\r\n                                {checked ? permanentCustomerAddress.map((element, index) => {\r\n                                    return <PermanentInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} className=\"form-control\" value={formik.values[element.presentName]} readOnly />\r\n                                }) : permanentCustomerAddress.map((element, index) => {\r\n                                    return <DefaultInput key={index} type={element.type} name={element.name} label={element.label} classes={classes} required={element.required}\r\n                                        className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\" : \"form-control\"} />\r\n                                })}\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap\">\r\n                                <div className=\"form-group  col-12 col-md-6 col-lg-3\">{uploadAadhar ?\r\n                                    <div>\r\n                                        <label className=\"h6\">Aadhar<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <p>Aadhar Card<span><MdEdit style={{cursor:'pointer'}} size=\"1.2em\" onClick={() => deleteCustomerAadhar(initialValues.custId, user)} /></span></p>\r\n                                    </div> :\r\n                                    <div>\r\n                                        <label className=\"h6\">Aadhar Card<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <input id=\"file\" ref={imageRef} name=\"aadhar\" type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e) => uploadAadharFile(e)} />\r\n                                    </div>\r\n                                }</div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">{uploadPan ?\r\n                                    <div><label className=\"h6\">Pancard<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <p>Pan Card<span><MdEdit style={{cursor:'pointer'}} size=\"1.2em\" onClick={() => deleteCustomerPan(initialValues.custId, user)} /></span></p></div> :\r\n                                    <div>\r\n                                        <label className=\"h6\">Pan Card<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <input id=\"file\" ref={imageRef} name=\"pan\"  type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e) => uploadPanFile(e)} />\r\n                                    </div>\r\n                                }</div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">{uploadPhoto ?\r\n                                    <div><label className=\"h6\">Photo<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <p>Photo<span><MdEdit style={{cursor:'pointer'}} size=\"1.2em\" onClick={() => deleteCustomerPhoto(initialValues.custId, user)} /></span></p></div> :\r\n                                    <div>\r\n                                        <label className=\"h6\">Photo<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <input id=\"file\" ref={imageRef} name=\"photo\" type=\"file\" accept=\"image/png,image/jpeg,image/jpg\" onChange={(e) => uploadPhotoFile(e)} />\r\n                                    </div>\r\n                                }</div>\r\n                                <div className=\"form-group col-12 col-md-6 col-lg-3\">{uploadPassbook ?\r\n                                    <div><label className=\"h6\">Bank PassBook<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <p>Bank Pass Book<span><MdEdit style={{cursor:'pointer'}} size=\"1.2em\" onClick={() => deleteCustomerPassBook(initialValues.custId, user)} /></span></p></div> :\r\n                                    <div>\r\n                                        <label className=\"h6\">Pass Book<sup><AiFillStar style={{ color: \"red\", width: \"8px\" }} /></sup></label><br />\r\n                                        <input id=\"file\" ref={imageRef} name=\"passbook\" type=\"file\"  accept=\"image/png,image/jpeg,image/jpg\" onChange={(e) => uploadPassbookFile(e)} />\r\n                                    </div>\r\n                                }</div>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"submit\" value=\"update\" className=\"btn btn-dark ml-md-4 mb-2\"/>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCustomerDetails\r\n","export default function FormatDate(val) {\r\n    const date = new Date(val);\r\n    const renderDate = date.toLocaleDateString('fr-CA');\r\n    return renderDate;\r\n}","import React from 'react'\r\nimport {Route} from 'react-router-dom';\r\n\r\nconst Routing = (props)=> {\r\n    const token = sessionStorage.getItem('token');\r\n    if(token){\r\n        return <Route {...props}/>\r\n    }else{\r\n        return props.logout();\r\n    }\r\n}\r\n\r\nexport default Routing\r\n","import React, { useRef, useContext, useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport { UserContext } from '../pos/posHome';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LifeInsuranceSearch() {\r\n   const history = useHistory();\r\n   const [customerData, setCustomerData] = useState([]);\r\n   const [active, setActive] = useState(true);\r\n   const inputValue = useRef(null);\r\n   const posId = useContext(UserContext);\r\n   const urlActive = window.location.pathname.slice(27);\r\n   console.log('url',urlActive);\r\n   useEffect(() => {\r\n      const searchInput = inputValue.current.value;\r\n      let path;\r\n      if (urlActive === 'life-insurance-transaction') {\r\n         path = '/home/life-insurance-transactions-data'\r\n      } else {\r\n         path = '/home/general-insurance-transactions-data'\r\n      }\r\n      callbacks(path, searchInput);\r\n   }, [customerData])\r\n   function callbacks(path, searchInput) {\r\n      const token = sessionStorage.getItem('token');\r\n      if (customerData.length > 0) {\r\n         axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/general-transactions/check-transaction-count/${searchInput}`, { headers: { Authorization: token } })\r\n            .then(res => {\r\n               console.log('res',res);\r\n               if (res.data.data[0].count === '0') {\r\n                  history.push({\r\n                     pathname: `/home/general-insurance-transactions-data`,\r\n                     state: customerData\r\n                  })\r\n               } else {\r\n                  axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/general-transactions/check-transaction-dues/${searchInput}`, { headers: { Authorization: token } })\r\n                     .then(res => {\r\n                        if (res) {\r\n                           const date = new Date(res.data.renewalDate);\r\n                           const currentDate = new Date();\r\n                           if (date >= currentDate) {\r\n                              alert('No pending dues till ' + new Date(res.data.renewalDate).toLocaleDateString('en-GB', { dateStyle: 'long' }));\r\n                              setActive(true);\r\n                           }else{\r\n                              const result = window.confirm('Click ok to submit your renewal transaction details');\r\n                              if(result){\r\n                                 history.push({\r\n                                    pathname: `/home/general-insurance-transactions-data`,\r\n                                    state: customerData\r\n                                 })\r\n                              }\r\n                           }\r\n                        }\r\n                     })\r\n                     .catch(err => console.log(err))\r\n               }\r\n            }).catch(err => console.log(err))\r\n      }\r\n   }\r\n   const onSubmitHandler = () => {\r\n      if (inputValue.current.value.length <= 0) {\r\n         window.alert('Please Enter Mobie Number or Aadhar Number or Pan Number');\r\n         return false;\r\n      } else {\r\n         const token = sessionStorage.getItem('token');\r\n         const searchInput = inputValue.current.value;\r\n         axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/life-transactions/customer-details/${searchInput}/${posId}`, { headers: { Authorization: token } })\r\n            .then(res => {\r\n               if (res.data.message === 'customer exists') {\r\n                  const result = window.alert(res.data.message + ' ' + `please wait redirecting`);\r\n                  setCustomerData(res.data.data)\r\n                  // setActive(false);\r\n               } else if (res.data.message === 'customer aadhar number not exists') {\r\n                  window.alert(res.data.message)\r\n               } else if (res.data.message === 'customer mobile number not exists') {\r\n                  window.alert(res.data.message);\r\n               } else if (res.data.message === 'customer pancard number not exists') {\r\n                  window.alert(res.data.message);\r\n               } else if (res.data === 'details not found') {\r\n                  window.alert('Please Enter Valid Mobie Number or Aadhar Number or Pan Number')\r\n               }\r\n            })\r\n            .catch(err => console.log(err))\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         <div className=\"container\">\r\n            <h4 className=\"text-center my-5\">General Insurance Transaction</h4>\r\n            <div>\r\n               <form>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                     <input type=\"text\" ref={inputValue} className=\"form-control col-6\" placeholder=\"Search by Mobile Number or Aadhar Number or Pan Number\" />\r\n                     {active && <input type=\"button\" className=\"btn btn-dark ml-2\" value=\"submit\" onClick={onSubmitHandler} />}\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default LifeInsuranceSearch;\r\n","/*eslint-disable*/\r\nimport React, { useState, Fragment } from 'react';\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport DatePicker from 'react-datepicker';\r\nimport { AiFillStar } from 'react-icons/ai';\r\n\r\nexport const Input = (props) => {\r\n    const { name, label, required, handler, value, readOnly } = props;\r\n\r\n    return <div className=\"form-group col-12 col-md-6 col-xl-4\">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field className=\"form-control\" name={name}   >\r\n                {({ field, form, meta }) => {\r\n                    // console.log(value)\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                value !== undefined ? \r\n                                    <input type=\"text\" placeholder={label} id={name} {...field} readOnly={readOnly} value={value && value} onChange={(e) => { form.handleChange(e); handler && handler(e.target.value) }} className=\"form-control\" />\r\n                                    :\r\n                                    <input type=\"text\" placeholder={label} id={name} {...field} readOnly={readOnly} value={form.values[name] ? form.values[name] : ''}  onChange={(e) => { form.handleChange(e); handler && handler(e.target.value) }} className=\"form-control\" />\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Select = (props) => {\r\n    const { name, label, required, children, handler } = props;\r\n\r\n\r\n    return <div className=\" form-group col-12 col-md-6 col-xl-4 \">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field as='select' name={name}  >\r\n                {({ field, form, meta }) => {\r\n                    return (\r\n                        <div>\r\n                            <select type=\"text\" id={name} {...field} onChange={(e) => { form.handleChange(e); handler && handler(e.target.value) }} className=\"form-control\" >\r\n                                {children}\r\n                            </select>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n// \r\nexport const DefaultInput = (props) => {\r\n    const { name, label, required } = props;\r\n    return <div className=\"form-group col-12 col-md-4 col-xl-3\">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field className=\"form-control text-uppercase\" id={name} name={name} readOnly />\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const DefaultSelect = (props) => {\r\n    const { name, label, required, children } = props;\r\n\r\n\r\n    return <div className=\" form-group col-12 col-md-6 col-xl-4 \">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field as='select' className=\"form-control w-100\" name={name} id={name} readOnly>\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\nexport const PermanentInput = (props) => {\r\n    const { name, label, required, present, present_name } = props;\r\n\r\n    return <div className=\"form-group col-12 col-md-6 col-xl-4\">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field className=\"form-control\" name={name}  >\r\n                {({ field, form, meta }) => {\r\n\r\n                    if (present) {\r\n                        meta.touched = true\r\n                        meta.initialTouched = true\r\n                        meta.error = undefined;\r\n                        form.touched[name] = true;\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                present ?  <input {...field}   type=\"text\" id={name} className=\"form-control\"  value={form.values[present_name]}  />\r\n                                : <input  {...field} type=\"text\" id={name} className=\"form-control\"   />\r\n                            }\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const AadharInput = (props) => {\r\n    const { name, label, required } = props;\r\n\r\n    return <div className=\"form-group col-12 col-md-6 col-xl-4\">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field className=\"form-control\" name={name} id={name} />\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport const OptionsSelect = (props) => {\r\n    const { name, label, required, children, handler, options, key1, key2, key3 } = props;\r\n\r\n\r\n    return <div className=\" form-group col-12 col-md-6 col-xl-4 \">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field as='select' name={name}  >\r\n                {({ field, form, meta }) => {\r\n                    return (\r\n                        <div>\r\n                            <select type=\"text\" id={name} {...field} onChange={(e) => { form.handleChange(e); handler && handler(e.target.value) }} className=\"form-control\" >\r\n                                <option value=\"\">Select</option>\r\n                                {\r\n                                    options?.map((value, index) => {\r\n                                        return <option key={index} className=\"text-uppercase\" value={key1 ? value[key1] : value}>{key2 ? value[key2] : value} {key3 && value[key3]}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const DateField = (props) => {\r\n    const { name, label, required, handler, minDate, value, disabled } = props;\r\n\r\n    return <div className=\"form-group col-12 col-md-6 col-xl-4\">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field className=\"form-control\" name={name} >\r\n                {({ field, form, meta }) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                value ?  <input type=\"date\" {...field} disabled={disabled} id={name} min={minDate && minDate} value={value && value} onChange={(e) => { form.handleChange(e); handler && handler(e.target.value) }} className=\"form-control  cursor-pointer\"  />\r\n                                : \r\n                                <input type=\"date\" {...field} disabled={disabled} id={name} min={minDate && minDate}  value={form.values[name] ? form.values[name] : ''}  onChange={(e) => { form.handleChange(e); handler && handler(e.target.value) }} className=\"form-control  cursor-pointer\" />\r\n                            }\r\n                        \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const GiveInput = (props) => {\r\n    const { name, label, required, value } = props;\r\n\r\n    return <div className=\"form-group col-12 col-md-6 col-xl-4\">\r\n        <div className=\"p-1\">\r\n            <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{ color: \"red\", width: \"8px\" }} /> : null}</label>\r\n        </div>\r\n        <div>\r\n            <Field className=\"form-control\" name={name} >\r\n                {\r\n                    ({ field, form }) => {\r\n                        if (value) {\r\n                            form.values[name] = value.toString();\r\n                        }\r\n                        return <input type=\"text\" id={name} className=\"form-control\" readOnly value={value} />\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} render={message => <p className=\"text-danger text-center\">{message}</p>} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n// export const DateField2 = (props) => {\r\n//     const { name, label, required, disabled } = props;\r\n//     function getYears(startYear) {\r\n//         let currentYear = new Date().getFullYear();\r\n//         let years = [];\r\n//         startYear = startYear || 1980;  \r\n//         while ( startYear <= currentYear ) {\r\n//             years.push(startYear++);\r\n//         }   \r\n//         return years;\r\n//     }\r\n//     const years = [...getYears(1950)]\r\n//     const months = [\r\n//       \"January\",\r\n//       \"February\",\r\n//       \"March\",\r\n//       \"April\",\r\n//       \"May\",\r\n//       \"June\",\r\n//       \"July\",\r\n//       \"August\",\r\n//       \"September\",\r\n//       \"October\",\r\n//       \"November\",\r\n//       \"December\",\r\n//     ];\r\n\r\n//     return<div className=\" form-group col-12 col-md-6 col-xl-4\">\r\n//                     <div className=\"p-1\">\r\n//                         <label htmlFor={name} className=\"h6\">{label} {required ? <AiFillStar style={{color: \"red\", width : \"8px\"}} /> : null}</label>\r\n//                     </div>\r\n//                     <div className=\"form-control\">\r\n//                         <Field className=\"form-control\"  name={name} >\r\n//                             { \r\n//                                 ({field, form}) => {\r\n//                                     const { setFieldValue } = form;\r\n//                                     const  { value } = field;\r\n//                                     return <DatePicker  readOnly={disabled} className = \" border border-white\" id={name}  {...field} \r\n//                                                         selected={value} \r\n//                                                         onChange={value => setFieldValue(name, value)}\r\n//                                                         placeholderText = \"Select Date\"\r\n//                                                         renderCustomHeader={({\r\n//                                                             date,\r\n//                                                             changeYear,\r\n//                                                             changeMonth,\r\n//                                                             decreaseMonth,\r\n//                                                             increaseMonth,\r\n//                                                             prevMonthButtonDisabled,\r\n//                                                             nextMonthButtonDisabled,\r\n//                                                           }) => (\r\n//                                                             <div\r\n//                                                               style={{\r\n//                                                                 margin: 10,\r\n//                                                                 display: \"flex\",\r\n//                                                                 justifyContent: \"center\",\r\n//                                                               }}\r\n//                                                             >\r\n//                                                               <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\r\n//                                                                 {\"<\"}\r\n//                                                               </button>\r\n//                                                               <select\r\n//                                                                 value={date.getFullYear()}\r\n//                                                                 onChange={({ target: { value } }) => changeYear(value)}\r\n//                                                               >\r\n//                                                                 {years.map((option) => (\r\n//                                                                   <option key={option} value={option}>\r\n//                                                                     {option}\r\n//                                                                   </option>\r\n//                                                                 ))}\r\n//                                                               </select>\r\n\r\n//                                                               <select\r\n//                                                                 value={months[date.getMonth()]}\r\n//                                                                 onChange={({ target: { value } }) =>\r\n//                                                                   changeMonth(months.indexOf(value))\r\n//                                                                 }\r\n//                                                               >\r\n//                                                                 {months.map((option) => (\r\n//                                                                   <option key={option} value={option}>\r\n//                                                                     {option}\r\n//                                                                   </option>\r\n//                                                                 ))}\r\n//                                                               </select>\r\n\r\n//                                                               <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\r\n//                                                                 {\">\"}\r\n//                                                               </button>\r\n//                                                             </div>\r\n//                                                           )}/>\r\n//                                 }\r\n//                             }\r\n//                         </Field>\r\n//                     </div>\r\n//                         <ErrorMessage  name = {name}  render={ message =><p className=\"text-danger text-center\">{message}</p>}/>\r\n//                 </div>\r\n// }","import * as yup from 'yup';\r\n\r\n\r\n\r\nexport const existingCustomerValidation = yup.object({\r\n    title : yup.string().required(\"Please select the title\"),\r\n    first_name : yup.string().required(\"Please enter customer name\").matches(/^[a-zA-z_ ]*$/, { message: \"Please enter only letters\", excludeEmptyString: false }).min(2, \"Please enter atleast 2 characters\").max(20, \"Please enter only 10 characters\"),\r\n    last_name : yup.string().required(\"Please enter customer name\").matches(/^[a-zA-z_ ]+$/, \"Please enter only letters\").min(2, \"Please enter atleast 2 characters\").max(20, \"Please enter only 10 characters\"),\r\n    mobile : yup.string().required(\"Please enter mobile number\").length(10, \"Please enter 10 digits mobile number\"),\r\n    email : yup.string().required(\"Please enter email name\").min(6, \"Please enter atleast 6 characters\"),\r\n    gender : yup.string().required(\"Please select the gender\"),\r\n    dob : yup.date().required(\"Please select date\").nullable(),\r\n    pan_number :yup.string().required(\"Please enter mobile number\").length(10, \"Please enter 10 digits pan number\").matches(/^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}$/, 'Please Enter a Valid Pancard Number'),\r\n    aadhar_number : yup.string().required(\"Please enter mobile number\").length(12, \"Please enter 12 digits aadhar number\"),\r\n    location : yup.string().required(\"Please select location\"),\r\n    branch : yup.string().required(\"Please select branch\"),\r\n    present_line1 : yup.string().required(\"Please enter present address\").min(10, \"Please enter atleast 10 characters\"),\r\n    present_line2 : yup.string().min(5, \"Please enter atleast 5 characters\"),\r\n    present_city : yup.string().required(\"Please enter present city\").min(5, \"Please enter atleast 5 characters\"),\r\n    present_district : yup.string().required(\"Please enter present city\").min(5, \"Please enter atleast 5 characters\"),\r\n    present_state : yup.string().required(\"Please enter present state\"),\r\n    present_country : yup.string().required(\"Please enter present country\"),\r\n    present_pincode : yup.string().required(\"Please enter present pincode\"),\r\n   permanent_line1 : yup.string().required(\"Please enter permanent address\").min(10, \"Please enter atleast 10 characters\"),\r\n   permanent_line2 : yup.string().min(5, \"Please enter atleast 5 characters\"),\r\n   permanent_city : yup.string().required(\"Please enter permanent city\").min(5, \"Please enter atleast 5 characters\"),\r\n   permanent_district : yup.string().required(\"Please enter permanent city\").min(5, \"Please enter atleast 5 characters\"),\r\n   permanent_state : yup.string().required(\"Please enter permanent state\"),\r\n   permanent_country : yup.string().required(\"Please enter permanent country\"),\r\n    permanent_pincode : yup.string().required(\"Please enterpermanent pincode\"),\r\n    employee_id : yup.string().nullable()\r\n})\r\n\r\n\r\nexport const addCustomerValidation = yup.object({\r\n    title : yup.string().required(\"Please select the title\"),\r\n    first_name : yup.string().required(\"Please enter customer name\").matches(/^[a-zA-z_ ]*$/, { message: \"Please enter only letters\", excludeEmptyString: false }).min(2, \"Please enter atleast 2 characters\").max(20, \"Please enter only 10 characters\"),\r\n    last_name : yup.string().required(\"Please enter customer name\").matches(/^[a-zA-z_ ]+$/, \"Please enter only letters\").min(2, \"Please enter atleast 2 characters\").max(20, \"Please enter only 10 characters\"),\r\n    mobile : yup.string().required(\"Please enter mobile number\").matches(/^[0-9_]*$/, { message: \"Please enter only numbers\", excludeEmptyString: false }).length(10, \"Please enter 10 digits mobile number\"),\r\n    email : yup.string().required(\"Please enter email name\").min(6, \"Please enter atleast 6 characters\"),\r\n    gender : yup.string().required(\"Please select the gender\"),\r\n    dob : yup.date().required(\"Please select date\").nullable(),\r\n    pan_number :yup.string().required(\"Please enter pan number\").matches(/^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}$/, 'Please Enter a Valid Pancard Number').length(10, \"Please enter 10 digits pan number\"),\r\n    aadhar_number : yup.string().required(\"Please enter aadhar number\").matches(/^[0-9_]*$/, { message: \"Please enter only numbers\", excludeEmptyString: false }).length(12, \"Please enter 12 digits aadhar number\"),\r\n    location : yup.string().required(\"Please select location\"),\r\n    branch : yup.string().required(\"Please select branch\"),\r\n    present_line1 : yup.string().required(\"Please enter present address\").min(10, \"Please enter atleast 10 characters\"),\r\n    present_line2 : yup.string().min(5, \"Please enter atleast 5 characters\"),\r\n    present_city : yup.string().required(\"Please enter present city\").min(5, \"Please enter atleast 5 characters\"),\r\n    present_district : yup.string().required(\"Please enter present city\").min(5, \"Please enter atleast 5 characters\"),\r\n    present_state : yup.string().required(\"Please enter present state\"),\r\n    present_country : yup.string().required(\"Please enter present country\"),\r\n    present_pincode : yup.string().required(\"Please enter present pincode\").matches(/^[0-9_]*$/, { message: \"Please enter only numbers\", excludeEmptyString: false }),\r\n   permanent_line1 : yup.string().required(\"Please enter permanent address\").min(10, \"Please enter atleast 10 characters\"),\r\n   permanent_line2 : yup.string().min(5, \"Please enter atleast 5 characters\"),\r\n   permanent_city : yup.string().required(\"Please enter permanent city\").min(5, \"Please enter atleast 5 characters\"),\r\n   permanent_district : yup.string().required(\"Please enter permanent city\").min(5, \"Please enter atleast 5 characters\"),\r\n   permanent_state : yup.string().required(\"Please enter permanent state\"),\r\n   permanent_country : yup.string().required(\"Please enter permanent country\"),\r\n    permanent_pincode : yup.string().required(\"Please enterpermanent pincode\").matches(/^[0-9_]*$/, { message: \"Please enter only numbers\", excludeEmptyString: false }),\r\n    \r\n})\r\n\r\nexport const GeneralValidationFunction = (value, files) => {\r\n\r\n    let returnValidation;\r\n\r\n    let cashObject = {\r\n        company_name : yup.string().required(\"Please select company name\"),\r\n        product_name : yup.string().required(\"Please select product name\"),\r\n        type_of_insurance : yup.string().required(\"Please select type of insurance\"),\r\n        sub_type : yup.string().required(\"Please select sub type\"),\r\n        plan_type : yup.string().required(\"Please select plan type\"),\r\n        plan_name : yup.string().required(\"Please select plan name\"),\r\n        // select_mode : yup.string().required(\"Please select select mode\"),\r\n        gross_premium : yup.string().required(\"Please select gross permium\"),\r\n        net_premium : yup.string(),\r\n        policy_type : yup.string().required(\"Please select policy type\"),\r\n        policy_tenure : yup.string().required(\"Please select policy tenure\"),\r\n        date_of_policy_login : yup.date().required(\"Please select date\").nullable(),\r\n        premium_payment_mode : yup.string().required(\"Please select permium payment mode\"),\r\n        type_of_business : yup.string().required(\"Please select type of business\"),\r\n        mode_of_payment : yup.string().required(\"Please select mode of payment\"),\r\n        date_of_entry : yup.date().required(\"Please select date\").nullable(),\r\n        revenue : yup.string(),\r\n        policy_number : yup.string().required(\"Please enter policy number\"),\r\n        stage : yup.string().required(\"Please enter stage\"),\r\n        account_number : yup.string(),\r\n        cheque_number : yup.string(), \r\n        cheque_account : yup.string(),\r\n        cheque_date : null,\r\n        bank_name : yup.string(),\r\n        reference_number : yup.string(),\r\n    }\r\n\r\n    const checkObject =  {\r\n            cheque_number : yup.string().required(\"Please enter cheque number\"), \r\n            cheque_account : yup.string().required(\"Please enter cheque account\"),\r\n            cheque_date : yup.date().required(\"Please select cheque date\").nullable(),\r\n            bank_name : yup.string().required(\"Please enter bank name\"),\r\n    }\r\n\r\n    const ddObject = {\r\n        account_number : yup.string().required(\"Please enter account number\"),   \r\n        cheque_number : yup.string().required(\"Please enter cheque number\"), \r\n        cheque_account : yup.string().required(\"Please enter cheque account\"),\r\n        cheque_date : yup.date().required(\"Please select cheque date\").nullable(),\r\n        bank_name : yup.string().required(\"Please enter bank name\"),\r\n    }\r\n    \r\n    const onlineObject = {\r\n        account_number : yup.string().required(\"Please enter account number\"),\r\n        reference_number : yup.string().required(\"Please enter reference number\"),\r\n    }\r\n\r\n    const filesObject = {\r\n        policy_number : yup.string().required(\"Please enter policy number\"),\r\n        stage : yup.string().required(\"Please enter stage\"),\r\n    }\r\n\r\n    if(files){\r\n        Object.assign(cashObject, filesObject)\r\n    }\r\n\r\n    switch (value) {\r\n        case \"Cheque\":\r\n                return  returnValidation = yup.object({ ...cashObject, ...checkObject })\r\n        case \"DD\":\r\n                return  returnValidation = yup.object({ ...cashObject, ...ddObject })\r\n        case \"Online\":\r\n                return  returnValidation = yup.object({ ...cashObject, ...onlineObject })\r\n        default:\r\n                return returnValidation = yup.object({...cashObject})\r\n    }\r\n    \r\n}\r\nexport const LifeValidationFunction = (value, files) => {\r\n\r\n    let returnValidation;\r\n\r\n    let cashObject = {\r\n        application_number :  yup.string().required(\"Please select application number\"),\r\n        company_name : yup.string().required(\"Please select company name\"),\r\n        plan_type : yup.string().required(\"Please select plan type\"),\r\n        plan_name : yup.string().required(\"Please select plan name\"),\r\n        premium_payment_term : yup.string().required(\"Please select permium payment term\"),\r\n        policy_term : yup.string().required(\"Please select policy term\").length(2, \"Please enter only 2 numbers\"),\r\n        product_name : yup.string().required(\"Please select product name\"),\r\n        gross_premium : yup.string().required(\"Please select gross permium\"),\r\n        net_premium : yup.string(),\r\n        date_of_entry : yup.date().required(\"Please select date\").nullable(),\r\n        premium_payment_mode : yup.string().required(\"Please select permium payment mode\"),\r\n        type_of_business : yup.string().required(\"Please select type of business\"),\r\n        mode_of_payment : yup.string().required(\"Please select mode of payment\"),\r\n        policy_number : yup.string().required(\"Please enter policy number\"),\r\n        stage : yup.string().required(\"Please enter stage\"),\r\n        policy_issue_date : yup.date().required(\"Please select date\").nullable(),\r\n        revenue : yup.string(),\r\n        account_number : yup.string(),\r\n        reference_number : yup.string(),\r\n    }\r\n\r\n    const checkObject =  {\r\n            cheque_number : yup.string().required(\"Please enter cheque number\"), \r\n            cheque_account : yup.string().required(\"Please enter cheque account\"),\r\n            cheque_date : yup.date().required(\"Please select cheque date\").nullable(),\r\n            bank_name : yup.string().required(\"Please enter bank name\"),\r\n    }\r\n\r\n    const ddObject = {\r\n        account_number : yup.string().required(\"Please enter account number\"),   \r\n        cheque_number : yup.string().required(\"Please enter cheque number\"), \r\n        cheque_account : yup.string().required(\"Please enter cheque account\"),\r\n        cheque_date : yup.date().required(\"Please select cheque date\").nullable(),\r\n        bank_name : yup.string().required(\"Please enter bank name\"),\r\n    }\r\n    \r\n    const onlineObject = {\r\n        account_number : yup.string().required(\"Please enter account number\"),\r\n        reference_number : yup.string().required(\"Please enter reference number\"),\r\n    }\r\n\r\n    const filesObject = {\r\n        policy_number : yup.string().required(\"Please enter policy number\"),\r\n        stage : yup.string().required(\"Please enter stage\"),\r\n    }\r\n\r\n    if(files){\r\n        Object.assign(cashObject, filesObject)\r\n    }\r\n\r\n    switch (value) {\r\n        case \"Cheque\":\r\n                return  returnValidation = yup.object({ ...cashObject, ...checkObject })\r\n        case \"DD\":\r\n                return  returnValidation = yup.object({ ...cashObject, ...ddObject })\r\n        case \"Online\":\r\n                return  returnValidation = yup.object({ ...cashObject, ...onlineObject })\r\n        default:\r\n                return returnValidation = yup.object({...cashObject})\r\n    }\r\n    \r\n}\r\n\r\n","import { DateFunction } from './helper';\r\nimport { format } from 'date-fns';\r\n\r\nexport const customerInitialValue = {\r\n  title : \"\",\r\n  first_name : \"\",\r\n  last_name : '',\r\n  mobile : \"\" ,\r\n  email : '',\r\n  gender : '',\r\n  dob : null,\r\n  pan_number : '',\r\n  aadhar_number : '',\r\n  location : '',\r\n  branch : '',\r\n  present_line1 : '',\r\n  present_line2 : '',\r\n  present_city : '',\r\n  present_district : '',\r\n  present_state : '',\r\n  present_country : '',\r\n  present_pincode : '',\r\n  permanent_line1 : '',\r\n  permanent_line2 : '',\r\n  permanent_city : '',\r\n  permanent_district : '',\r\n  permanent_state : '',\r\n  permanent_country : '',\r\n  permanent_pincode : '',\r\n}\r\n\r\n\r\nexport const customerInitialValueTest = {\r\n  title : \"Mr\",\r\n  first_name : \"Sai Bhargav\",\r\n  last_name : 'Sankoji',\r\n  mobile : \"9666606228\",\r\n  email : 'Saibhargav@gmail.com',\r\n  gender : 'Male',\r\n  dob : \"2021-07-29\",\r\n  // dob :  format(new Date(), \"MM-dd-yyyy\"),\r\n  pan_number : 'ABCDE1234A',\r\n  aadhar_number : '966660622800',\r\n  location : 'hyderabad',\r\n  branch : 'somajiguda',\r\n  present_line1 : '2-5-169, Puranipet, Jagtial',\r\n  present_line2 : '2-5-169, Puranipet, Jagtial',\r\n  present_city : 'Jagtial',\r\n  present_district : 'Jagtial',\r\n  present_state : 'Telangana',\r\n  present_country : 'India',\r\n  present_pincode : '505327',\r\n  permanent_line1 : '2-5-169, Puranipet, Jagtial',\r\n  permanent_line2 : '2-5-169, Puranipet, Jagtial',\r\n  permanent_city : 'Jagtial',\r\n  permanent_district : 'Jagtial',\r\n  permanent_state : 'Telangana',\r\n  permanent_country : 'India',\r\n  permanent_pincode : '505327',\r\n}\r\n\r\nexport const customerInitialValueFunction = (customer) => {\r\n  let returnInitialValues;\r\n\r\n  returnInitialValues = {\r\n    title : customer ? customer.title : \"\",\r\n    first_name : customer ? customer.first_name : \"\", \r\n    last_name : customer ? customer.last_name : \"\",\r\n    mobile : customer ? customer.mobile : \"\",\r\n    email : customer ? customer.email : \"\",\r\n    gender : customer ? customer.gender : \"\",\r\n    // dob : customer ? \"2021-07-06\" : \"\",\r\n    dob : customer ? format(new Date(customer.dob), 'yyyy-MM-dd') : \"\",\r\n    pan_number : customer ? customer.pan_number : \"\",\r\n    aadhar_number : customer ? customer.aadhar_number : \"\",\r\n    location : customer ? customer.location : \"\",\r\n    branch : customer ? customer.branch : \"\",\r\n    present_line1 : customer ? customer.present_line1 : \"\",\r\n    present_line2 : customer ? customer.present_line2 : \"\",\r\n    present_city : customer ? customer.present_city : \"\",\r\n    present_district : customer ? customer.present_district : \"\",\r\n    present_state : customer ? customer.present_state : \"\",\r\n    present_country : customer ? customer.present_country : \"\",\r\n    present_pincode : customer ? customer.present_pincode : \"\",\r\n    permanent_line1 : customer ? customer.permanent_line1 : \"\",\r\n    permanent_line2 : customer ? customer.permanent_line2 : \"\",\r\n    permanent_city : customer ? customer.permanent_city : \"\",\r\n    permanent_district : customer ? customer.permanent_district : \"\",\r\n    permanent_state : customer ? customer.permanent_state : \"\",\r\n    permanent_country : customer ? customer.permanent_country : \"\",\r\n    permanent_pincode : customer ? customer.permanent_pincode : \"\",\r\n  }\r\n\r\n  return returnInitialValues\r\n}\r\n\r\n\r\nexport const GeneralInitialValueFunction = (data) => {\r\n\r\n  // console.log(data)\r\n  let returnInitialValues;\r\n\r\n    returnInitialValues= {\r\n    company_name : '',\r\n    product_name : '',\r\n    type_of_insurance : '',\r\n    sub_type : '',\r\n    plan_type : '',\r\n    plan_name : '',\r\n    // select_mode : '',\r\n    gross_premium : '',\r\n    net_premium : '',\r\n    policy_number : '',\r\n    policy_type : '',\r\n    policy_tenure : '',\r\n    date_of_policy_login : null,\r\n    premium_payment_mode:'',\r\n    type_of_business : '',\r\n    mode_of_payment : '',\r\n    stage : '',\r\n    date_of_entry : null,\r\n    revenue : \"\",\r\n    account_number : \"\",\r\n    cheque_number : \"\",\r\n    cheque_account : \"\",\r\n    cheque_date : null,\r\n    bank_name : \"\",\r\n    reference_number : \"\"\r\n    }\r\n  \r\n  return returnInitialValues;\r\n}\r\nexport const LifeInitialValueFunction = (data) => {\r\n\r\n  let returnInitialValues;\r\n\r\n    returnInitialValues= {\r\n      application_number : '',\r\n      company_name : '',\r\n      product_name : '',\r\n      plan_type : '',\r\n      plan_name : '',\r\n      premium_payment_term : '',\r\n      policy_term : '',\r\n      gross_premium : '',\r\n      net_premium : '',\r\n      date_of_entry : null,\r\n      premium_payment_mode : \"\",\r\n      type_of_business : '',\r\n      mode_of_payment : '',\r\n      policy_number : \"\",\r\n      stage : '',\r\n      policy_issue_date : null,\r\n      revenue : \"\",\r\n      account_number : \"\",\r\n      cheque_number : \"\",\r\n      cheque_account : \"\",\r\n      cheque_date : null,\r\n      bank_name : \"\",\r\n      reference_number : \"\"\r\n    }\r\n  \r\n  return returnInitialValues;\r\n}\r\n\r\nexport const TransactionCustomerFunction = (customer = {}) => {\r\n  let customerInitialValue;\r\n\r\n  customerInitialValue = { \r\n    title : customer.title,\r\n    first_name : customer.first_name,\r\n    last_name : customer.last_name,\r\n    mobile : customer.mobile_number,\r\n    email : customer.email,\r\n    gender : customer.gender,\r\n    dob : new Date(customer.dob),\r\n    pan_number : customer.pancard,\r\n    aadhar_number : customer.aadhar_number,\r\n    location : customer.location,\r\n    branch : customer.branch,\r\n    present_line1 : customer.present_line1,\r\n    present_line2 : customer.present_line2,\r\n    present_city : customer.present_city,\r\n    present_district : customer.present_district,\r\n    present_state : customer.present_state,\r\n    present_country : customer.present_country,\r\n    present_pincode : customer.present_pincode,\r\n}\r\n\r\nreturn customerInitialValue;\r\n}\r\n\r\n\r\n\r\nexport const lifeInsuranceTransactionValues = {\r\n  application_number : '',\r\n  company_name : '',\r\n  product_name : '',\r\n  plan_type : '',\r\n  plan_name : '',\r\n  premium_payment_term : '',\r\n  policy_term : '',\r\n  gross_premium : '',\r\n  net_premium : '',\r\n  date_of_entry : null,\r\n  premium_payment_mode : \"\",\r\n  type_of_business : '',\r\n  mode_of_payment : '',\r\n  policy_number : \"\",\r\n  stage : '',\r\n  policy_issue_date : null,\r\n  revenue : \"\",\r\n  account_number : \"\",\r\n  cheque_number : \"\",\r\n  cheque_account : \"\",\r\n  cheque_date : null,\r\n  bank_name : \"\",\r\n  reference_number : \"\"\r\n}\r\n\r\nexport   const generalInsuranceTransactionValues = {\r\n    company_name : '',\r\n    product_name : '',\r\n    type_of_insurance : '',\r\n    sub_type : '',\r\n    plan_type : '',\r\n    plan_name : '',\r\n    select_mode : '',\r\n    gross_premium : '',\r\n    net_premium : '',\r\n    policy_number : '',\r\n    policy_type : '',\r\n    policy_tenure : '',\r\n    date_of_policy_login : null,\r\n    type_of_business : '',\r\n    mode_of_payment : '',\r\n    stage : '',\r\n    date_of_entry : null,\r\n    revenue : \"\",\r\n    account_number : \"\",\r\n    cheque_number : \"\",\r\n    cheque_account : \"\",\r\n    cheque_date : null,\r\n    bank_name : \"\",\r\n    reference_number : \"\"\r\n  }\r\n\r\n// let initialStateValues = {\r\n//     title : \"Mr\",\r\n//     first_name : \"Sai Bhargav\",\r\n//     last_name : 'Sankoji  ',\r\n//     mobile : \"9666606228\" ,\r\n//     email : 'saibhargav@gmail.com',\r\n//     gender : 'Male',\r\n//     dob : new Date(),\r\n//     pan_number : '9666606228',\r\n//     aadhar_number : '966660622800',\r\n//     location : 'Hyderabad',\r\n//     branch : 'Somajiguda',\r\n//     present_line1 : '2-5-169, Puranipet',\r\n//     present_line2 : '2-5-169, Puranipet',\r\n//     present_city : 'Jagtial',\r\n//     present_district : 'Jagtial',\r\n//     present_state : 'Telangana',\r\n//     present_country : 'India',\r\n//     present_pincode : '505327',\r\n//     permanent_line1 : '2-5-169, Puranipet',\r\n//     permanent_line2 : '2-5-169, Puranipet',\r\n//     permanent_city : 'Jagtial',\r\n//     permanent_district : 'Jagtial',\r\n//     permanent_state : 'Telangana',\r\n//     permanent_country : 'India',\r\n//     permanent_pincode : '505327',\r\n//   }\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function AlertDialog({ dailog: { message, open, id, pending }, close }) {\r\n    const [dailogOpen, setDailogOpen] = useState(false);\r\n    const history = useHistory();\r\n    const dailogMessage = (id, pending) => {\r\n        const pendingString = `Transaction is saved with transaction id: ${id} but poilcy number or stage or files are not given. Please inserted them later to complete transaction. Until then the transaction will be saved in pending transactions `\r\n        const completeString = `Transaction details are saved successfully and sent to the operation team with transaction-id: ${id}`\r\n        let returnString;\r\n\r\n        if(pending){\r\n            returnString = pendingString;\r\n        } else {\r\n            returnString = completeString;\r\n        }\r\n\r\n        return returnString;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setDailogOpen(open)\r\n    }, [open])\r\n\r\n    const handleClose = () => {\r\n        setDailogOpen(false);\r\n        history.push('/home/business-transaction/life-insurance-transaction')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={dailogOpen}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" style={{ fontWeight: \"bold\", color: \"red\"}}>Alert</DialogTitle>\r\n                <DialogContent className=\"d-flex justify-content-center flex-column\">\r\n                    <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"700\" }}>\r\n                        {dailogMessage(id, pending)}\r\n                    </DialogContentText>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={() => { handleClose(); close() }} variant=\"contained\" color=\"primary\">\r\n                            Ok....!\r\n                        </Button>\r\n                    </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","/*eslint-disable */\r\nimport React, { Fragment, useState, useEffect, useContext, useRef } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Input, Select, DateField, DefaultInput, OptionsSelect } from '../helper/Input';\r\nimport { GeneralValidationFunction } from '../helper/validations';\r\nimport { customerInitialValue, GeneralInitialValueFunction, TransactionCustomerFunction } from '../helper/initialValues';\r\nimport AlertDialog from './components/Dailog';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport {UserContext} from '../pos/posHome';                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \r\n\r\nconst GeneralInsuranceTransaction = () => {\r\n    const [data, setData] = useState({ ...customerInitialValue });\r\n    const [customerData, setCustomerData] = useState({ ...customerInitialValue });\r\n    const [rmi, setRmi] = useState([]);\r\n    const [telecallers, setTelecallers] = useState([]);\r\n    const [files, setFiles] = useState({});\r\n    const [agents, setAgents] = useState([]);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [products, setProduct] = useState([]);\r\n    const [insuranceType, setInsuranceType] = useState([]);\r\n    const [planType, setPlanType] = useState([])\r\n    const [planName, setPlanName] = useState([])\r\n    const [subType, setSubType] = useState([])\r\n    const [filesInput, setFilesInput] = useState(false)\r\n    const [revenueDetails, setRevenueDetails] = useState([]);\r\n    const [saveTransactionsDailog, setSaveTransactionsDailog] = useState({ open: false, message: \"saveTransactions\", id: null, pending: false });\r\n\r\n    const [revenue, setRevenue] = useState(\"\")\r\n    const [netPremium, setNetPremium] = useState(\"\")\r\n    const [mop, setMop] = useState('');\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const pdfRef1 = useRef(null);\r\n    const pdfRef2 = useRef(null);\r\n    const posId = useContext(UserContext);\r\n\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        if (posId) {\r\n            !location.state[0].pancard && alert(\"Please go back and select transaction again.\");\r\n            axios.post(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/pan-number`, { pan_number: location.state[0].pancard, pos_id: posId },{headers:{Authorization:token}})\r\n            .then(res=>setCustomerData(TransactionCustomerFunction(res.data.data)))\r\n            .catch(error=>console.log(error))\r\n        }\r\n    }, [location.state, posId])\r\n   \r\n    useEffect(async () => {\r\n        try {\r\n            const token = sessionStorage.getItem('token');\r\n            let companiesArray = [];\r\n            const fetchCompanies = await axios.get(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/companies',{headers:{Authorization : token}});\r\n            if (fetchCompanies.status === 200) {\r\n                // eslint-disable-next-line array-callback-return\r\n                fetchCompanies.data.data.map((item, index) => {\r\n                    companiesArray.push(item.company_name);\r\n                })\r\n            }\r\n\r\n            setCompanies([...new Set(companiesArray)]);\r\n\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n\r\n    }, [])\r\n\r\n    const mopHandler = (value) => {\r\n        switch (value) {\r\n            case \"Cheque\":\r\n                return <Fragment>\r\n                    <Input name=\"cheque_number\" label=\"Cheque Number\" />\r\n                    <Input name=\"cheque_account\" label=\"Cheque Account\" />\r\n                    <DateField name=\"cheque_date\" label=\"Cheque Date\" />\r\n                    <Input name=\"bank_name\" label=\"Bank Name\" />\r\n                </Fragment>\r\n            case \"DD\":\r\n                return <Fragment>\r\n                    <Input name=\"account_number\" label=\"Account Number\" />\r\n                    <Input name=\"cheque_number\" label=\"Cheque Number\" />\r\n                    <Input name=\"cheque_account\" label=\"Cheque Account\" />\r\n                    <DateField name=\"cheque_date\" label=\"Cheque Date\" />\r\n                    <Input name=\"bank_name\" label=\"Bank Name\" />\r\n                </Fragment>\r\n            case \"Online\":\r\n                return <Fragment>\r\n                    <Input name=\"account_number\" label=\"Account Number\" />\r\n                    <Input name=\"reference_number\" label=\"Reference Number\" />\r\n                </Fragment>\r\n            case \"Cash\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const TravelMode = function () {\r\n        const obj = [\r\n            {\r\n                mode: \"TP without OD\",\r\n                // revenue: \"2.6\"\r\n            },\r\n            {\r\n                mode: \"TP with OD\",\r\n                // revenue: \"1.4\"\r\n            },\r\n            {\r\n                mode: \"Comprehensive\",\r\n                // revenue: \"1.7\"\r\n            }\r\n        ]\r\n\r\n        return obj;\r\n    }\r\n\r\n    const HealthMode = function () {\r\n        const obj = [\r\n            {\r\n                mode: \"Premium\",\r\n                // revenue: \"1.7\"\r\n            },\r\n        ]\r\n\r\n        return obj;\r\n    }\r\n\r\n    let companyFunction = async (value) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/products', { company_name: value },{headers:{Authorization:token}});\r\n        if (response.status === 200) {\r\n            setProduct(response.data.data)\r\n        }\r\n    }\r\n\r\n    let productFunction = async (value, formikValues) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/type-of-insurance', { company_name: formikValues.company_name, product_name: value },{headers:{Authorization:token}});\r\n        if (response.status === 200) {\r\n            setInsuranceType(response.data.data)\r\n        }\r\n    }\r\n\r\n    let typeOfInsurance = async (value, formikValues) => {\r\n        const token = sessionStorage.getItem('token');\r\n        switch (value.toLowerCase()) {\r\n            case \"travel\":\r\n                setSubType(TravelMode());\r\n                break;\r\n                \r\n            case \"health\":\r\n                setSubType(HealthMode());\r\n                break;\r\n        }\r\n\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/plan-type', { company_name: formikValues.company_name, product_name: formikValues.product_name, type_of_insurance: value },{headers:{Authorization:token}});\r\n        if (response.status === 200) {\r\n            setPlanType(response.data.data)\r\n        }\r\n    }\r\n\r\n    let planTypeHandler = async (value, formikValues) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/plan-name', { company_name: formikValues.company_name, product_name: formikValues.product_name, type_of_insurance: formikValues.type_of_insurance, plan_type: value },{headers:{Authorization:token}});\r\n        if (response.status === 200) {\r\n            setPlanName(response.data.data)\r\n        }\r\n    }\r\n\r\n    let planNameHandler = async (value, formikValues) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/revenue', { company_name: formikValues.company_name, product_name: formikValues.product_name, type_of_insurance: formikValues.type_of_insurance, plan_type: formikValues.plan_type, plan_name: value },{headers:{Authorization:token}});\r\n        if (response.status === 200) {\r\n            setRevenueDetails(response.data.data)\r\n        }\r\n    }\r\n\r\n    const grossFunction = (e, formikValues) => {\r\n        if (!formikValues.company_name || !formikValues.product_name || !formikValues.type_of_insurance || !formikValues.plan_type || !formikValues.plan_name ) {\r\n            alert('Please select company, product, type of insurance, plan name, plan type');\r\n            return;\r\n        }\r\n    \r\n        setNetPremium(((Number(e) / 1.18)).toFixed(0));\r\n        setRevenue(Number(((Number(e)/1.18) * Number(revenueDetails[0].revenue) / 100).toFixed(0)));\r\n    }\r\n\r\n    const uploadFile = (e) => {\r\n        const { name } = e.target;\r\n        const selected = e.target.files[0].size\r\n        if (e.target.files[0].type !== \"application/pdf\") {\r\n            e.target.value = null\r\n            alert(\"Please upload only pdf files\");\r\n            return false;\r\n        }\r\n        if (selected >= 2000000) {\r\n            window.alert(`${name} File too big max 200KB`);\r\n            e.target.value = null\r\n            return false;\r\n        }\r\n\r\n        let file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsBinaryString(file);\r\n        reader.onload = (e) => {\r\n            setFiles(preValue => ({\r\n                ...preValue,\r\n                [name]: window.btoa(e.target.result)\r\n            }))\r\n        }\r\n    }\r\n\r\n    const dailogClose = () => {\r\n        setSaveTransactionsDailog({ open: false });\r\n        history.push({ pathname: '/home/business-transaction/general-insurance-transaction' });\r\n    }\r\n\r\n\r\n    const onSubmit = async (values) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const premium = {\r\n            net_premium  : netPremium,\r\n            revenue : revenue\r\n        }\r\n        const extraInformation = {\r\n            customer_mobile: customerData.mobile,\r\n            customer_aadhar: customerData.aadhar_number,\r\n            customer_pan: customerData.pan_number,\r\n            customer_name: `${customerData.first_name} ${customerData.last_name}`,\r\n            submitted_pos_id: posId\r\n        }\r\n        const transactionDetails = { ...values, ...files, ...extraInformation,...premium};\r\n        console.log(transactionDetails);\r\n\r\n        const { data: { transaction_id } } = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/general-transactions/add-transaction', transactionDetails,{headers:{Authorization:token}});\r\n        console.log(transaction_id)\r\n        if (transaction_id && transactionDetails.policy_form && transactionDetails.policy_number  && transactionDetails.stage) {\r\n            setSaveTransactionsDailog({ open: true, id: transaction_id, pending: false });\r\n        } else {\r\n            setSaveTransactionsDailog({ open: true, id: transaction_id, pending: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Formik enableReinitialize initialValues={customerData} >\r\n                <div className='px-2'>\r\n                    <Form>\r\n                        <div className=\"d-flex flex-wrap pt-3\">\r\n                            <DefaultInput name=\"title\" label=\"Title\" />\r\n                            <DefaultInput name=\"first_name\" label=\"First Name\" />\r\n                            <DefaultInput name=\"last_name\" label=\"Last Name\" />\r\n                            <DefaultInput name=\"mobile\" label=\"Mobile\" />\r\n                            <DefaultInput name=\"email\" label=\"Email\" />\r\n                            <DefaultInput name=\"gender\" label=\"Gender\" />\r\n                            <DefaultInput name=\"pan_number\" label=\"Pan Card Number\" />\r\n                            <DefaultInput name=\"aadhar_number\" label=\"Aadhar Card Number\" />\r\n                            <DefaultInput name=\"location\" label=\"Location\" />\r\n                            <DefaultInput name=\"branch\" label=\"Branch\" />\r\n                            <DefaultInput name=\"present_line1\" label=\"Line 1\" />\r\n                            <DefaultInput name=\"present_line2\" label=\"Line 2\" />\r\n                            <DefaultInput name=\"present_city\" label=\"City\" />\r\n                            <DefaultInput name=\"present_district\" label=\"City\" />\r\n                            <DefaultInput name=\"present_state\" label=\"State\" />\r\n                            <DefaultInput name=\"present_country\" label=\"Country\" />\r\n                            <DefaultInput name=\"present_pincode\" label=\"Pincode\" />\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </Formik>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={GeneralInitialValueFunction()}\r\n                validationSchema={GeneralValidationFunction(mop, filesInput)}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {\r\n                    formikProps => {\r\n                        // console.log(formikProps)\r\n                        return <div className='px-2'>\r\n                            <Form>\r\n                                <div className=\"d-flex flex-wrap pt-3\">\r\n                                    <div className=\"col-12 py-3\">\r\n                                        <h5 className=\"text-center\">Please fill busineess entry details</h5>\r\n                                    </div>\r\n                                    <OptionsSelect name=\"company_name\" label=\"Company Name\" required handler={companyFunction} options={companies} />\r\n                                    <OptionsSelect name=\"product_name\" label=\"Product Name\" required handler={(value) => productFunction(value, formikProps.values)} options={products} key1=\"product_name\" key2=\"product_name\" />\r\n                                    <OptionsSelect name=\"type_of_insurance\" label=\"Type of Insurance\" required handler={(value) => typeOfInsurance(value, formikProps.values)} options={insuranceType} key1=\"type_of_insurance\" key2=\"type_of_insurance\" />\r\n                                    <OptionsSelect name=\"sub_type\" label=\"Sub Type\" required options={subType} key1=\"mode\" key2=\"mode\" />\r\n                                    <OptionsSelect name=\"plan_type\" label=\"Plan Type\" required handler={(e) => planTypeHandler(e, formikProps.values)} options={planType} key1=\"plan_type\" key2=\"plan_type\" />\r\n                                    <OptionsSelect name=\"plan_name\" label=\"Plan Name\" required handler={(e) => planNameHandler(e, formikProps.values)} options={planName} key1=\"plan_name\" key2=\"plan_name\" />\r\n                                    <Input name=\"gross_premium\" label=\"Gross Premium\" required handler={(e) => grossFunction(e, formikProps.values)} />\r\n                                    <Input name=\"net_premium\" label=\"Net Premium\" required value={netPremium} readOnly />\r\n                                    <Input name=\"policy_type\" label=\"Policy Type\" required />\r\n                                    <Input name=\"policy_tenure\" label=\"Policy Tenure\" required />\r\n                                    <DateField name=\"date_of_policy_login\" label=\"Date of Policy Logins\" required />\r\n                                    <Select name=\"premium_payment_mode\" label=\"Premium Payment Mode\" required>\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"Monthly\">Monthly</option>\r\n                                        <option value=\"Quaterly\">Quaterly</option>\r\n                                        <option value=\"Half Yearly\">Half Yearly</option>\r\n                                        <option value=\"Annually\">Annually</option>\r\n                                    </Select>\r\n                                    <Select name=\"type_of_business\" label=\"Type of Business\" required>\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"New Business\">New Business</option>\r\n                                        <option value=\"Renewel\">Renewel</option>\r\n                                    </Select>\r\n                                    <Select name=\"mode_of_payment\" label=\"Mode of Payment\" required handler={setMop}  >\r\n                                        <option >Select</option>\r\n                                        <option value=\"Cheque\">Cheque</option>\r\n                                        <option value=\"DD\">DD</option>\r\n                                        <option value=\"Online\">Online</option>\r\n                                        <option value=\"Cash\">Cash</option>\r\n                                    </Select>\r\n                                    {\r\n                                        formikProps.values.mode_of_payment ? mopHandler(formikProps.values.mode_of_payment) : null\r\n                                    }\r\n                                    <Input name=\"policy_number\" label=\"Policy Number\" />\r\n                                    <Select name=\"stage\" label=\"Stage\" >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"Login\">Login</option>\r\n                                        <option value=\"Issued\">Issued</option>\r\n                                        <option value=\"Cancelled\">Cancelled</option>\r\n                                    </Select>\r\n                                    <DateField name=\"date_of_entry\" label=\"Date of Entry\" required />\r\n                                    <Input name=\"revenue\" label=\"Revenue\" required value={revenue} readOnly />\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center align-items-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-secondary\" >Submit</button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    }\r\n                }\r\n            </Formik>\r\n            <div className=\"d-flex flex-wrap justify-content-center py-3\">\r\n                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                    <label className=\"h6\">Policy Form</label><br />\r\n                    <input id=\"file\" ref={pdfRef1} name=\"policy_form\" type=\"file\" accept=\"pdf\" onChange={(e) => uploadFile(e)} />\r\n                </div>\r\n            </div>\r\n            {saveTransactionsDailog ? <AlertDialog dailog={saveTransactionsDailog} close={dailogClose} /> : null}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default GeneralInsuranceTransaction;","import React, { useRef, useContext, useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport { UserContext } from '../pos/posHome';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LifeInsuranceSearch() {\r\n   const history = useHistory();\r\n   const [customerData, setCustomerData] = useState([]);\r\n   const [active, setActive] = useState(true);\r\n   const inputValue = useRef(null);\r\n   const posId = useContext(UserContext);\r\n   const urlActive = window.location.pathname.slice(27);\r\n   useEffect(() => {\r\n      const searchInput = inputValue.current.value;\r\n      // let path;\r\n      // if (urlActive === 'life-insurance-transaction') {\r\n      //    path = '/home/life-insurance-transactions-data'\r\n      // } else {\r\n      //    path = '/home/general-insurance-transactions-data'\r\n      // }\r\n      callbacks(searchInput);\r\n   }, [customerData])\r\n   function callbacks(searchInput) {\r\n      const token = sessionStorage.getItem('token');\r\n      if (customerData.length > 0) {\r\n         axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/life-transactions/check-transaction-count/${searchInput}`, { headers: { Authorization: token } })\r\n            .then(res => {\r\n               console.log('res',res);\r\n               if (res.data.data[0].count === '0') {\r\n                  history.push({\r\n                     pathname: `/home/life-insurance-transactions-data`,\r\n                     state: customerData\r\n                  })\r\n               } else {\r\n                  axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/life-transactions/check-transaction-dues/${searchInput}`, { headers: { Authorization: token } })\r\n                     .then(res => {\r\n                        if (res) {\r\n                           const date = new Date(res.data.renewalDate);\r\n                           const currentDate = new Date();\r\n                           if (date >= currentDate) {\r\n                              alert('No pending dues till ' + new Date(res.data.renewalDate).toLocaleDateString('en-GB', { dateStyle: 'long' }));\r\n                              setActive(true);\r\n                           }else{\r\n                              const result = window.confirm('Click ok to submit your renewal transaction details');\r\n                              if(result){\r\n                                 history.push({\r\n                                    pathname: `/home/life-insurance-transactions-data`,\r\n                                    state: customerData\r\n                                 })\r\n                              }\r\n                           }\r\n                        }\r\n                     }).catch(err => console.log(err))\r\n               }\r\n            }).catch(err => console.log(err))\r\n      }\r\n   }\r\n   const onSubmitHandler = () => {\r\n      if (inputValue.current.value.length <= 0) {\r\n         window.alert('Please Enter Mobie Number or Aadhar Number or Pan Number');\r\n         return false;\r\n      } else {\r\n         const token = sessionStorage.getItem('token');\r\n         const searchInput = inputValue.current.value;\r\n         axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/life-transactions/customer-details/${searchInput}/${posId}`, { headers: { Authorization: token } })\r\n            .then(res => {\r\n               if (res.data.message === 'customer exists') {\r\n                  const result = window.alert(res.data.message + ' ' + `please wait redirecting`);\r\n                  setCustomerData(res.data.data)\r\n                  // setActive(false);\r\n               } else if (res.data.message === 'customer aadhar number not exists') {\r\n                  window.alert(res.data.message)\r\n               } else if (res.data.message === 'customer mobile number not exists') {\r\n                  window.alert(res.data.message);\r\n               } else if (res.data.message === 'customer pancard number not exists') {\r\n                  window.alert(res.data.message);\r\n               } else if (res.data === 'details not found') {\r\n                  window.alert('Please Enter Valid Mobie Number or Aadhar Number or Pan Number')\r\n               }\r\n            })\r\n            .catch(err => console.log(err))\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         <div className=\"container\">\r\n            {urlActive === 'life-insurance-transaction' ? <h4 className=\"text-center my-5\">Life Insurance Transaction</h4> : <h4 className=\"text-center my-5\">General Insurance Transaction</h4>}\r\n            <div>\r\n               <form>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                     <input type=\"text\" ref={inputValue} className=\"form-control col-6\" placeholder=\"Search by Mobile Number or Aadhar Number or Pan Number\" />\r\n                     {active && <input type=\"button\" className=\"btn btn-dark ml-2\" value=\"submit\" onClick={onSubmitHandler} />}\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default LifeInsuranceSearch;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/core/Alert';\r\n\r\n\r\nexport const PopFunction = ({message, open} )  => <PopUp message={message} open={open}/>\r\n\r\n\r\nconst PopUp = ({ popup : { message, open, color }}) => {\r\n    const [openSnack, setOpenSnack] = useState(false);\r\n    \r\n    useEffect(() =>{\r\n        setOpenSnack(open)\r\n    }, [open])\r\n\r\n    const handleClose = () => {\r\n        setOpenSnack(false);\r\n    }\r\n    \r\n    return (\r\n        <Snackbar\r\n                open={openSnack}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            >\r\n                <Alert onClose={handleClose} severity={color ? color : \"info\"}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n    )\r\n}\r\n\r\nexport default PopUp;","import axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\n\r\nconst defaultRouter = CrmforPosService.CrmforPosService.baseURL;\r\n\r\nconst headersFunction = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    const headers = {\r\n        headers: { 'Authorization': token}\r\n    }\r\n    return headers;\r\n}\r\n  \r\n\r\nexport const fetchLocations = async () => {\r\n    const { data } = await axios.get(defaultRouter+ `/api/life-insurance-reports/locations`,  headersFunction());\r\n    return data;\r\n}\r\n\r\nexport const zonalReports = async ( values ) => {\r\n    const { data } = await axios.post(defaultRouter+ `/api/life-insurance-reports/zonal-reports`, values, headersFunction());\r\n    return data;\r\n}\r\n\r\nexport const fetchLifeReportsForPayouts =async(from_date,to_date)=>{\r\n    const {data} = await axios.get(defaultRouter + `/api/payouts/get-life-payouts/${from_date}/${to_date}`,headersFunction())\r\n    return data;\r\n}\r\n\r\nexport const fetchGeneralReportsForPayouts =async(from_date,to_date)=>{\r\n    const {data} = await axios.get(defaultRouter + `/api/payouts/get-general-payouts/${from_date}/${to_date}`,headersFunction())\r\n    return data;\r\n}\r\n\r\nexport const fetchLifePptRevenue = async (value, formikValues) => {\r\n    const obj = {\r\n        company_name: formikValues.company_name,\r\n        product_name: formikValues.product_name,\r\n        plan_type: formikValues.plan_type,\r\n        plan_name: formikValues.plan_name,\r\n        premium_payment_term: value\r\n    }\r\n    const { data } = await axios.post(defaultRouter + `/api/life-transactions/get-ppt-revenue`, { obj }, headersFunction());\r\n    return data;\r\n}\r\n\r\nexport const getPOSPersonType = async()=>{\r\n    const { data } = await axios.get(defaultRouter + `/api/payouts/get-person-type`, headersFunction());\r\n    return data;\r\n}","/*eslint-disable*/\r\nimport React, { Fragment, useState, useEffect, useRef, useContext } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Input, Select, DateField, DefaultInput, OptionsSelect } from '../helper/Input';\r\nimport { LifeValidationFunction } from '../helper/validations';\r\nimport PopUp from './components/PopUp';\r\nimport AlertDialog from './components/Dailog';\r\nimport { customerInitialValue, LifeInitialValueFunction, TransactionCustomerFunction } from '../helper/initialValues';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport { UserContext } from '../pos/posHome';\r\nimport {fetchLifePptRevenue} from '../helper/api';\r\n\r\nconst LifeInsuranceTransaction = () => {\r\n    const [customerData, setCustomerData] = useState({ ...customerInitialValue });\r\n    const [mop, setMop] = useState('');\r\n    const [companies, setCompanies] = useState([]);\r\n    const [products, setProduct] = useState([]);\r\n    const [planType, setPlanType] = useState([]);\r\n    const [planName, setPlanName] = useState([])\r\n    const [pptRevenue, setPptRevenue] = useState([])\r\n    const [ppt, setPpt] = useState('')\r\n    const [revenue, setRevenue] = useState('')\r\n    const [netPremium, setNetPremium] = useState('')\r\n    const [filesInput, setFilesInput] = useState(false)\r\n    const location = useLocation();\r\n    const [files, setFiles] = useState({});\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [popup, setPopup] = useState({ open: false, message: \"\", color: \"info\" }); /////Color : warning, success, error, info\r\n    const [saveTransactionsDailog, setSaveTransactionsDailog] = useState({ open: false, message: \"saveTransactions\", id: null, pending: false });\r\n\r\n    const pdfRef1 = useRef(null);\r\n    const pdfRef2 = useRef(null);\r\n    const posId = useContext(UserContext);\r\n\r\n    useEffect(async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        if (posId) {\r\n            !location.state[0].pancard && alert(\"Please go back and select transaction again.\");\r\n            axios.post(CrmforPosService.CrmforPosService.baseURL + `/api/pos/customer/pan-number`, { pan_number: location.state[0].pancard, pos_id: posId },{headers:{Authorization:token}})\r\n            .then(res=>setCustomerData(TransactionCustomerFunction(res.data.data)))\r\n            .catch(error=>console.log(error))\r\n        }\r\n    }, [location.state, posId])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const token = sessionStorage.getItem('token');\r\n            let companiesArray = [];\r\n            const fetchProduct = await axios.get(CrmforPosService.CrmforPosService.baseURL + '/api/life-transactions/companies',{headers:{Authorization:token}});\r\n            if (fetchProduct.data.status === 200) {\r\n                fetchProduct.data.data.map((item, index) => {\r\n                    companiesArray.push(item.company_name);\r\n                })\r\n            }\r\n            setCompanies([...new Set(companiesArray)]);\r\n        } catch (e) {\r\n            alert(\"Something went wrong. Please try again!!!\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    const mopHandler = (value) => {\r\n        switch (value) {\r\n            case \"Cheque\":\r\n                return <Fragment>\r\n                    <Input name=\"cheque_number\" label=\"Cheque Number\" required />\r\n                    <Input name=\"cheque_account\" label=\"Cheque Account\" required />\r\n                    <DateField name=\"cheque_date\" label=\"Cheque Date\" required />\r\n                    <Input name=\"bank_name\" label=\"Bank Name\" required />\r\n                </Fragment>\r\n            case \"DD\":\r\n                return <Fragment>\r\n                    <Input name=\"account_number\" label=\"Account Number\" required />\r\n                    <Input name=\"cheque_number\" label=\"Cheque Number\" required />\r\n                    <Input name=\"cheque_account\" label=\"Cheque Account\" required />\r\n                    <DateField name=\"cheque_date\" label=\"Cheque Date\" required />\r\n                    <Input name=\"bank_name\" label=\"Bank Name\" required />\r\n                </Fragment>\r\n            case \"Online\":\r\n                return <Fragment>\r\n                    <Input name=\"account_number\" label=\"Account Number\" required />\r\n                    <Input name=\"reference_number\" label=\"Reference Number\" required />\r\n                </Fragment>\r\n            case \"Cash\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    let companyFunction = async (value) => {\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/life-transactions/products', { company_name: value });\r\n        if (response.status === 200) {\r\n            setProduct(response.data.data)\r\n        }\r\n    }\r\n\r\n    let productFunction = async (value, formikValues) => {\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/life-transactions/plan-type', { company_name: formikValues.company_name, product_name: value });\r\n        if (response.status === 200) {\r\n            setPlanType(response.data.data)\r\n        }\r\n    }\r\n\r\n    let planTypeFunction = async (value, formikValues) => {\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/life-transactions/plan-name', { company_name: formikValues.company_name, product_name: formikValues.product_name, plan_type: value });\r\n        if (response.status === 200) {\r\n            setPlanName(response.data.data)\r\n        }\r\n    }\r\n\r\n    let planNameFunction = async (value, formikValues) => {\r\n        const response = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/life-transactions/ppt-revenue', { company_name: formikValues.company_name, product_name: formikValues.product_name, plan_type: formikValues.plan_type, plan_name: value });\r\n        if (response.status === 200) {\r\n            // console.log(response.data.data)\r\n            setPptRevenue(response.data.data)\r\n        }\r\n    }\r\n\r\n    let premiumPaymentTermFunction = async(value,formikValues)=>{\r\n        fetchLifePptRevenue(value,formikValues).then(response=>{setPpt(response[0].revenue)})\r\n    }\r\n\r\n    const grossFunction = (e, formikValues) => {\r\n        if (!formikValues.company_name || !formikValues.product_name || !formikValues.plan_name || !formikValues.premium_payment_term || !formikValues.plan_type) {\r\n            alert('Please select company, product, plan name, premium payment term, plan type');\r\n            return;\r\n        }\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch (formikValues.plan_type.toLocaleLowerCase()) {\r\n            case \"ULIP\".toLocaleLowerCase(): // 18\r\n            case \"Term Plan\".toLocaleLowerCase(): // 18\r\n                setNetPremium(((Number(e) / 1.18)).toFixed(0));\r\n                setRevenue(Number(((Number(e)/1.18) * Number(ppt) / 100).toFixed(0)));\r\n                break;\r\n            case \"Traditional Plan\".toLocaleLowerCase(): // 4.5\r\n                setNetPremium((Number(e)/1.045).toFixed(0));\r\n                setRevenue(Number(((Number(e)/1.045) * Number(ppt) / 100).toFixed(0)));\r\n                break;\r\n        }\r\n    }\r\n\r\n    const uploadFile = (e) => {\r\n        const { name } = e.target;\r\n        const selected = e.target.files[0].size\r\n        if (e.target.files[0].type !== \"application/pdf\") {\r\n            e.target.value = null\r\n            alert(\"Please upload only pdf files\");\r\n            return;\r\n        }\r\n        if (selected >= 200000) {\r\n            window.alert(`${name} File too big max 200KB`);\r\n            e.target.value = null\r\n            return;\r\n        }\r\n\r\n        let file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsBinaryString(file);\r\n        reader.onload = (e) => {\r\n            setFiles(preValue => ({\r\n                ...preValue,\r\n                [name]: window.btoa(e.target.result)\r\n            }))\r\n        }\r\n    }\r\n\r\n    const dailogClose = () => {\r\n        setSaveTransactionsDailog({ open: false });\r\n        history.push({ pathname: '/home/business-transaction/life-insurance-transaction' });\r\n    }\r\n\r\n\r\n    const onSubmit = async (values, onSubmitProps) => {\r\n        const token = sessionStorage.getItem('token');\r\n        const extraInformation = {\r\n            customer_mobile: customerData.mobile,\r\n            customer_aadhar: customerData.aadhar_number,\r\n            customer_pan: customerData.pan_number,\r\n            customer_name: `${customerData.first_name} ${customerData.last_name}`,\r\n            submitted_pos_id: posId\r\n        }\r\n        const premium = {\r\n            net_premium : netPremium,\r\n            revenue : revenue\r\n        }\r\n        const transactionDetails = { ...values, ...files, ...premium, ...extraInformation };\r\n        \r\n        const { data: { transaction_id } } = await axios.post(CrmforPosService.CrmforPosService.baseURL + '/api/life-transactions/add-transaction', transactionDetails,{headers:{Authorization:token}});\r\n        if (transaction_id && transactionDetails.policy_form && transactionDetails.policy_number && transactionDetails.application_form && transactionDetails.stage) {\r\n            setSaveTransactionsDailog({ open: true, id: transaction_id, pending: false });\r\n        } else {\r\n            setSaveTransactionsDailog({ open: true, id: transaction_id, pending: true });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-12 py-3\"><h5 className=\"text-center\">Customer Details</h5></div>\r\n            <Formik enableReinitialize initialValues={customerData} >\r\n                <div className='px-3'>\r\n                    <Form>\r\n                        <div className=\"d-flex flex-wrap pt-3\">\r\n                            <DefaultInput name=\"title\" label=\"Title\" />\r\n                            <DefaultInput name=\"first_name\" label=\"First Name\" />\r\n                            <DefaultInput name=\"last_name\" label=\"Last Name\" />\r\n                            <DefaultInput name=\"mobile\" label=\"Mobile\" />\r\n                            <DefaultInput name=\"email\" label=\"Email\" />\r\n                            <DefaultInput name=\"gender\" label=\"Gender\" />\r\n                            <DefaultInput name=\"pan_number\" label=\"Pan Card Number\" />\r\n                            <DefaultInput name=\"aadhar_number\" label=\"Aadhar Card Number\" />\r\n                            <DefaultInput name=\"location\" label=\"Location\" />\r\n                            <DefaultInput name=\"branch\" label=\"Branch\" />\r\n                            <DefaultInput name=\"present_line1\" label=\"Line 1\" />\r\n                            <DefaultInput name=\"present_line2\" label=\"Line 2\" />\r\n                            <DefaultInput name=\"present_city\" label=\"City\" />\r\n                            <DefaultInput name=\"present_district\" label=\"District\" />\r\n                            <DefaultInput name=\"present_state\" label=\"State\" />\r\n                            <DefaultInput name=\"present_country\" label=\"Country\" />\r\n                            <DefaultInput name=\"present_pincode\" label=\"Pincode\" />\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </Formik>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={LifeInitialValueFunction()}\r\n                validationSchema={LifeValidationFunction(mop, filesInput)}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {\r\n                    formikProps => {\r\n                        // console.log(formikProps.values)\r\n                        return <div className='px-3'>\r\n\r\n                            <Form>\r\n                                <div className=\"d-flex flex-wrap pt-3\">\r\n                                    <div className=\"col-12 py-3\">\r\n                                        <h5 className=\"text-center\">Please fill busineess entry details</h5>\r\n                                    </div>\r\n                                    <Input name=\"application_number\" label=\"Application Number\" required />\r\n                                    <OptionsSelect name=\"company_name\" label=\"Company Name\" required handler={companyFunction} options={companies} />\r\n                                    <OptionsSelect name=\"product_name\" label=\"Product Name\" required handler={(value) => productFunction(value, formikProps.values)} options={products} key1=\"product_name\" key2=\"product_name\" />\r\n                                    <OptionsSelect name=\"plan_type\" label=\"Plan Type\" required handler={(value) => planTypeFunction(value, formikProps.values)} options={planType} key1=\"plan_type\" key2=\"plan_type\" />\r\n                                    <OptionsSelect name=\"plan_name\" label=\"Plan Name\" required handler={(value) => planNameFunction(value, formikProps.values)} options={planName} key1=\"plan_name\" key2=\"plan_name\" />\r\n                                    <OptionsSelect name=\"premium_payment_term\" label=\"Premium Payment Term\" required handler={(value)=>premiumPaymentTermFunction(value,formikProps.values)} options={pptRevenue} key1=\"premium_payment_term\" key2='premium_payment_term' />\r\n                                    <Input name=\"policy_term\" label=\"Policy Term\" required />\r\n                                    <Input name=\"gross_premium\" label=\"Gross Premium\" required handler={(value) => grossFunction(value, formikProps.values)} />\r\n                                    <Input name=\"net_premium\" label=\"Net Premium\" required value={netPremium} readOnly />\r\n                                    <DateField name=\"date_of_entry\" label=\"Date of Entry\" required />\r\n                                    <Select name=\"premium_payment_mode\" label=\"Premium Payment Mode\" required>\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"Monthly\">Monthly</option>\r\n                                        <option value=\"Quaterly\">Quaterly</option>\r\n                                        <option value=\"Half Yearly\">Half Yearly</option>\r\n                                        <option value=\"Annually\">Annually</option>\r\n                                    </Select>\r\n                                    <Select name=\"type_of_business\" label=\"Type of Business\" required>\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"New Business\">New Business</option>\r\n                                        <option value=\"Renewel\">Renewel</option>\r\n                                    </Select>\r\n                                    <Select name=\"mode_of_payment\" label=\"Mode of Payment\" required handler={setMop} >\r\n                                        <option value=\"\">select</option>\r\n                                        <option value=\"Cheque\">Cheque</option>\r\n                                        <option value=\"DD\">DD</option>\r\n                                        <option value=\"Online\">Online</option>\r\n                                        <option value=\"Cash\">Cash</option>\r\n                                    </Select>\r\n                                    <Input name=\"policy_number\" label=\"Policy Number\" required={filesInput} />\r\n                                    {\r\n                                        formikProps.values.mode_of_payment && mopHandler(formikProps.values.mode_of_payment)\r\n                                    }\r\n                                    <Select name=\"stage\" label=\"Stage\" required={filesInput}>\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"Login\">Login</option>\r\n                                        <option value=\"Issued\">Issued</option>\r\n                                        <option value=\"Cancelled\">Cancelled</option>\r\n                                    </Select>\r\n                                    <DateField name=\"policy_issue_date\" label=\"Policy Issue Date\" required />\r\n                                    <Input name=\"revenue\" label=\"Revenue\" required value={revenue} readOnly />\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center align-items-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    }\r\n                }\r\n            </Formik>\r\n            <div className=\"d-flex flex-wrap justify-content-center py-3\">\r\n                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                    <label className=\"h6\">Application Form</label><br />\r\n                    <input id=\"file\" ref={pdfRef1} name=\"application_form\" type=\"file\" accept=\"pdf\" onChange={(e) => uploadFile(e)} />\r\n                </div>\r\n                <div className=\"form-group col-12 col-md-6 col-lg-3\">\r\n                    <label className=\"h6\">Policy Form</label><br />\r\n                    <input id=\"file\" ref={pdfRef2} name=\"policy_form\" type=\"file\" accept=\"pdf\" onChange={(e) => uploadFile(e)} />\r\n                </div>\r\n            </div>\r\n            <PopUp popup={popup} />\r\n            {saveTransactionsDailog ? <AlertDialog dailog={saveTransactionsDailog} close={dailogClose} /> : null}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default LifeInsuranceTransaction;\r\n","import React from 'react';\r\nimport {Formik,Form} from 'formik';\r\nimport {DefaultInput} from '../pos/input'\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction LifeInsurancePosReports() {\r\n   const history = useHistory();\r\n   const urlactive = window.location.pathname.slice(6);\r\n   const initialValues = {\r\n      from_date : '',\r\n      to_date : ''\r\n   }\r\n   const onSubmitLifeReports = (values)=>{\r\n      const token = sessionStorage.getItem('token');\r\n      axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/reports/get-life-insurance-pos-reports/${values.from_date}/${values.to_date}`,{headers:{Authorization:token}})\r\n      .then(res=>{\r\n         // console.log(res.data)\r\n         if(res.data.responseData){\r\n            history.push({\r\n               pathname : '/pos-life-reports',\r\n               state : res.data\r\n            })\r\n         }else if(res.data.status === 200 && res.data.message === 'no data found'){\r\n            window.alert('No results Found');\r\n         }\r\n      })\r\n      .catch(err=>console.log(err))\r\n   }\r\n   const onSubmitGeneralReports = (values)=>{\r\n      const token = sessionStorage.getItem('token');\r\n      axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/reports/get-general-insurance-pos-reports/${values.from_date}/${values.to_date}`,{headers:{Authorization:token}})\r\n      .then(res=>{\r\n         // console.log(res.data)\r\n         if(res.data.responseData){\r\n            history.push({\r\n               pathname : '/pos-general-reports',\r\n               state : res.data\r\n            })\r\n         }else if(res.data.status === 200 && res.data.message === 'no data found'){\r\n            window.alert('No results Found');\r\n         }\r\n      })\r\n      .catch(err=>console.log(err))\r\n   }\r\n   const lifePosReportsValidation = yup.object({\r\n      from_date : yup.string().required('Please Select From Date'),\r\n      to_date : yup.string().required('Please Select To Date')\r\n   });\r\n\r\n   const inputFields = [\r\n      {type : \"date\", label : \"From Date\", required : true, name :'from_date'},\r\n      {type : \"date\", label : \"To Date\", required : true, name : 'to_date'}\r\n   ]\r\n\r\n   const classes = \"col-12 col-md-6 col-lg-4\"\r\n   return (\r\n      <>\r\n         <div className=\"d-flex justify-content-center my-3\">\r\n            {urlactive === 'life-transactions-pos-reports' ? <h5>Life Insurance POS Reports</h5> : <h5>General Insurance POS Reports</h5>}\r\n         </div>\r\n         <Formik\r\n            initialValues = {initialValues}\r\n            onSubmit = {urlactive === 'life-transactions-pos-reports' ? onSubmitLifeReports : onSubmitGeneralReports}\r\n            validationSchema = {lifePosReportsValidation}\r\n         >\r\n            {formik => {\r\n               return(\r\n                  <Form>\r\n                     <div className=\"col-12 d-flex flex-wrap justify-content-center\">\r\n                        {inputFields.map((element,index)=>{\r\n                           return(\r\n                              <DefaultInput key={index} classes={classes} name={element.name} label={element.label} type={element.type} required={element.required}\r\n                              className={formik.touched[element.name] && formik.errors[element.name] ? \"is-invalid form-control\":\"form-control\"}/>\r\n                           )\r\n                        })}\r\n                     </div>\r\n                     <div className=\"d-flex justify-content-center\">\r\n                        <input type=\"submit\" className=\"btn btn-dark mt-2\" value=\"submit\"/>\r\n                     </div>\r\n                  </Form>\r\n               )\r\n            }}\r\n            \r\n         </Formik>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default LifeInsurancePosReports;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nfunction BarChart(props) {\r\n   const [revenue,setRevenue] = useState([]);\r\n   useEffect(() => {\r\n     setRevenue(props.lifeData)\r\n   }, [revenue, props.lifeData])\r\n\r\n   const data = {\r\n      labels: [\"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\",\r\n         \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"\r\n      ],\r\n      datasets: [{\r\n         label: props.title,\r\n         data: props.lifeData,\r\n         backgroundColor: props.bg,\r\n         borderWidth: 1,\r\n         barPercentage: 0.5,\r\n      }],\r\n   }\r\n   const options= {\r\n      legend: {\r\n           labels: {\r\n                fontColor: 'black'\r\n               }\r\n            },\r\n      title: {\r\n          display: true,\r\n          fontColor: 'black',\r\n          text: props.title\r\n      }     ,\r\n      scales: {\r\n          yAxes: [{\r\n              ticks: {\r\n                  beginAtZero:true,\r\n                  fontColor: 'black'\r\n              },\r\n          }],\r\n        xAxes: [{\r\n              ticks: {\r\n                  fontColor: 'black'\r\n              },\r\n          }]\r\n      } \r\n\r\n  }\r\n  \r\n   return <Bar data={data} options={options}/>\r\n}\r\n\r\nexport default BarChart\r\n","import React, { useState, useEffect,useContext } from 'react';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport BarChart from '../graphs/BarChart';\r\nimport { UserContext } from '../pos/posHome';\r\n\r\nfunction Home() {\r\n   const user = useContext(UserContext);\r\n   const [lifeTxnCount, setLifeTxnCount] = useState(0);\r\n   const [generalTxnCount, setGeneralTxnCount] = useState(0);\r\n   const [lifeRevenueData,setLifeRevenueData] = useState([]);\r\n   const [generalRevenueData,setGeneralRevenueData] = useState([]);\r\n   const [lifeComissionData,setLifeCommissionData] = useState([]);\r\n   const [generalCommissionData,setGeneralCommissionData] = useState([]);\r\n   let chartLifeInput =  new Array(12).fill(0);\r\n   let chartGeneralInput =  new Array(12).fill(0);\r\n\r\n   useEffect(async() => {\r\n      const token = sessionStorage.getItem('token');\r\n      await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/reports/life-reports-count`,{headers:{Authorization:token}})\r\n         .then(res => {\r\n            if (res.data.responseData) {\r\n               setLifeTxnCount(res.data.responseData[0].count)\r\n            }\r\n         }).catch(err => console.log(err))\r\n      await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/reports/general-reports-count`,{headers:{Authorization:token}})\r\n         .then(res => {\r\n            if (res.data.responseData) {\r\n               setGeneralTxnCount(res.data.responseData[0].count)\r\n            }\r\n         }).catch(err => console.log(err))\r\n      await axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/reports/monthly-life-revenue-data`,{headers:{Authorization:token}})\r\n      .then(res=>{\r\n         if(res.data.responseData){\r\n            setLifeRevenueData(res.data.responseData);\r\n         }\r\n      }).catch(err=>console.log(err))\r\n      await axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/reports/monthly-general-revenue-data`,{headers:{Authorization:token}})\r\n      .then(res=>{\r\n         if(res.data.responseData){\r\n            setGeneralRevenueData(res.data.responseData);\r\n         }\r\n      }).then(err=>console.log(err))\r\n      // axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/reports/monthly-life-commission-data`,{headers:{Authorization:token}})\r\n      // .then(res=>{\r\n      //    if(res.data.responseData){\r\n      //       setLifeCommissionData(res.data.responseData);\r\n      //    }\r\n      // }).then(err=>console.log(err))\r\n      // axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/reports/monthly-general-commission-data`,{headers:{Authorization:token}})\r\n      // .then(res=>{\r\n      //    if(res.data.responseData){\r\n      //       setGeneralCommissionData(res.data.responseData);\r\n      //    }\r\n      // }).then(err=>console.log(err))\r\n   }, [])\r\n  \r\n   useEffect(() => {\r\n     lifeRevenueData.map((arr,index)=>{\r\n        return(\r\n         chartLifeInput[arr.month-1] = Number(arr.total).toFixed(2)\r\n        )\r\n     });\r\n     generalRevenueData.map((arr,index)=>{\r\n      return(\r\n       chartGeneralInput[arr.month-1] = Number(arr.total).toFixed(2)\r\n      )\r\n   })\r\n   }, [chartGeneralInput, chartLifeInput, generalRevenueData, lifeRevenueData])\r\n   return (\r\n      <div style={{minHeight:'100vh'}}>\r\n         <div className=\"d-flex justify-content-center\"><h4 className=\"my-4\">Monthly Reports</h4></div>\r\n         <div className=\"d-flex justify-content-center\">\r\n            <div className=\"block col-3 mr-3\">\r\n               <div className=\"text-center mt-4\">\r\n                  <p className=\"h6 home_reports_title\">Life Insurance Transactions</p>\r\n                  <h1>{lifeTxnCount}</h1>\r\n               </div>\r\n            </div>\r\n            <div className=\"block col-3\">\r\n               <div className=\"text-center mt-4\">\r\n                  <p className=\"h6 home_reports_title\">General Insurance Transactions</p>\r\n                  <h1>{generalTxnCount}</h1>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"d-flex justify-content-center\"><h4 className=\"my-4\">Annual Reports</h4></div>\r\n         <div className=\"chart mb-4\">\r\n            <div><BarChart lifeData = {chartLifeInput} title=\"Life Insurance Revenue in Lakhs\" bg=\"#1c78e2\"/></div>\r\n            <h4 className=\"my-1 text-center\">Life Insurance Revenue</h4>\r\n            <div className=\"mt-5\"><BarChart lifeData = {chartGeneralInput} title = \"General Insurance Revenue in Lakhs\" bg=\"#044896\"/></div>\r\n            <h4 className=\"my-1 text-center\">General Insurance Revenue</h4>\r\n            <div className=\"mt-5\"><BarChart lifeData = {chartGeneralInput} title = \"commission earned in Lakhs\" bg=\"#1c78e2\"/></div>\r\n            <h4 className=\"my-1 text-center\">Life Insurance Payouts</h4>\r\n            <div className=\"mt-5\"><BarChart lifeData = {chartGeneralInput} title = \"commission earned in Lakhs\" bg=\"#044896\"/></div>\r\n            <h4 className=\"my-1 text-center\">General Insurance Payouts</h4>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {BsArrowRight} from  'react-icons/bs'\r\n\r\nfunction ReportsTable(props) {\r\n   return (\r\n      <>\r\n          <div className=\"container-fluid p-0\">\r\n         <h4 className=\"text-center m-3\">{props.title} Insurance Reports</h4>\r\n         <div className=\"table-responsive p-1\">\r\n            <table className=\"table table-striped text-white c0l-12 p-0\" style={{borderCollapse:\"initial\"}}>\r\n               <thead>\r\n                  <tr>\r\n                     <th>S.no</th>\r\n                     <th>Customer&nbsp;ID</th>\r\n                     <th>Customer&nbsp;Name</th>\r\n                     <th>Date Of Birth</th>\r\n                     <th>Mobile&nbsp;Number</th>\r\n                     <th>Policy&nbsp;Number</th>\r\n                     <th>Premium&nbsp;Payment&nbsp;Mode</th>\r\n                     <th>Renewal&nbsp;Date</th>\r\n                     <th>Txn</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody className=\"text-dark\">\r\n                  {props.data.map((obj,index)=>{\r\n                     return(\r\n                        <tr className={props.date > obj.renewal_date ? \"table-warning\": \"table-success\"} key={index}>\r\n                           <td className=\"text-center\">{index+1}<sub>&#8226;</sub></td>\r\n                           <td className=\"text-uppercase\">{obj.customer_id}</td>\r\n                           <td className=\"text-capitalize\">{obj.customer_name}</td>\r\n                           <td>{new Date(obj.dob).toLocaleDateString('en-GB')}</td>\r\n                           <td>{obj.customer_mobile}</td>\r\n                           <td>{obj.policy_number}</td>\r\n                           <td className=\"text-center\">{obj.premium_payment_mode}</td>\r\n                           <td>{new Date(obj.renewal_date).toLocaleDateString('en-GB')}</td>\r\n                           <td><BsArrowRight size=\"1.3em\"  onClick={() => props.redirect(obj.customer_pan,props.user)}/></td>\r\n                        </tr>\r\n                     )\r\n                  })}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n      </div>\r\n\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ReportsTable\r\n","import React,{useEffect,useContext,useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport { UserContext } from '../pos/posHome';\r\nimport ReportsTable from './ReportsTable';\r\n\r\nfunction LifeInsurance() {\r\n   const user = useContext(UserContext);\r\n   const history = useHistory();\r\n   // console.log(user)\r\n   const [data,setData] = useState([]);\r\n   const currentDate = new Date().toLocaleDateString('en-CA');\r\n   const name = 'pos_life_insurance_transactions';\r\n   const name1= 'pos_life_transactions';\r\n   useEffect(() => {\r\n      const token = sessionStorage.getItem('token');\r\n    if(user){\r\n      axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/renewal/get-records/${name}/${name1}/${user}`,{headers:{Authorization:token}})\r\n      .then(res=>setData(res.data))\r\n    }else{\r\n       return false;\r\n    }\r\n   }, [user])\r\n   const redirectToLifeInsuranceTxn = async (id,posId) => {\r\n      const token = sessionStorage.getItem('token');\r\n      axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/life-transactions/customer-details/${id}/${posId}`,{headers:{Authorization:token}})\r\n      .then(res=>{\r\n         if(res.data.message === 'customer exists'){\r\n            history.push({\r\n               pathname:`/home/life-insurance-transactions-data`,\r\n               state: res.data.data\r\n           })\r\n         }\r\n      })\r\n      .catch(err=>console.log(err))\r\n  }\r\n   return (\r\n      <>\r\n         <ReportsTable data={data} date={currentDate} redirect={redirectToLifeInsuranceTxn} user={user} title='Life'/>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default LifeInsurance\r\n","import React,{useEffect,useContext,useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../config/index';\r\nimport { UserContext } from '../pos/posHome';\r\nimport ReportsTable from './ReportsTable';\r\n\r\nfunction LifeInsurance() {\r\n   const user = useContext(UserContext);\r\n   const history = useHistory();\r\n   // console.log(user)\r\n   const [data,setData] = useState([]);\r\n   const currentDate = new Date().toLocaleDateString('en-CA');\r\n   const name = 'pos_general_insurance_transactions';\r\n   const name1 = 'pos_general_transactions';\r\n   useEffect(() => {\r\n      const token = sessionStorage.getItem('token');\r\n    if(user){\r\n      axios.get(CrmforPosService.CrmforPosService.baseURL+`/api/pos/renewal/get-records/${name}/${name1}/${user}`,{headers:{Authorization : token}})\r\n      .then(res=>setData(res.data))\r\n    }else{\r\n       return false;\r\n    }\r\n   }, [user])\r\n   const redirectToLifeInsuranceTxn = async (id,posId) => {\r\n      const token = sessionStorage.getItem('token');\r\n      axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/life-transactions/customer-details/${id}/${posId}`,{headers:{Authorization:token}})\r\n      .then(res=>{\r\n         if(res.data.message === 'customer exists'){\r\n            history.push({\r\n               pathname:`/home/general-insurance-transactions-data`,\r\n               state: res.data.data\r\n           })\r\n         }\r\n      })\r\n      .catch(err=>console.log(err))\r\n  }\r\n   return (\r\n      <>\r\n         <ReportsTable data={data} date={currentDate} redirect={redirectToLifeInsuranceTxn} user={user} title='General'/>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default LifeInsurance\r\n","function logo() {\r\n   return ''\r\n}\r\n\r\nexport default logo\r\n","import React, { useState,useEffect } from 'react';\r\nimport 'jspdf-autotable';\r\nimport jspdf from 'jspdf';\r\nimport logo from '../posReports/logo';\r\nimport {HiOutlineDocumentDownload} from 'react-icons/hi';\r\nimport {addMonths} from 'date-fns';\r\n\r\nfunction LifeInsurancePayouts(props) {\r\n    // console.log(props.data)\r\n    \r\n    const fromDate = props.dates.from_date;\r\n    const toDate = props.dates.to_date;\r\n\r\n    const exportPDF = ()=>{\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape  \r\n        const doc = new jspdf(orientation,unit,size);\r\n        doc.addImage(logo(), 630, 0, 200, 100);\r\n        doc.setFont('helvetica');\r\n        doc.setFontSize(11)\r\n        doc.text('Dear Sir/Madam',10,45)\r\n        doc.text('Thanking you For Supporting LMV',10,60)\r\n        doc.text(`Please find the below mention case done on ${new Date(props.dates.from_date).toLocaleDateString('en-GB',{dateStyle:'long'})} to ${new Date(props.dates.to_date).toLocaleDateString('en-GB',{dateStyle:'long'})} this payment Release On ${new Date(fromDate).getDate() >= 1 || new Date(toDate) <=15 ? '10' : '26'} ${addMonths(new Date(props.dates.from_date),1).toLocaleDateString('en-GB',{year:'numeric',month:'long'})}.`,10,75);\r\n        doc.text('Bank Details Also Attached Please Check and Confirm Once',10,90)\r\n        doc.autoTable({ \r\n            html: '#reports-table',\r\n            theme: 'grid',\r\n            useCss : true,\r\n            startY : 120,\r\n            margin : {left : 10,right:10},\r\n         });\r\n         let finalY = doc.lastAutoTable.finalY;\r\n         doc.text(10,finalY+20,'Please Find the Bank Account Details')\r\n         doc.text(10,finalY+35,'Account Holder Name:'+' '+props.account[0].first_name.toLocaleUpperCase()+\" \"+props.account[0].last_name.toLocaleUpperCase())\r\n         doc.text(10,finalY+50,'Account No:'+' '+props.account[0].account_number)\r\n         doc.text(10,finalY+65,'IFSC Code:'+' '+props.account[0].ifsc_code.toLocaleUpperCase())\r\n         doc.text(10,finalY+80,'Pan No:'+' '+props.account[0].pancard.toLocaleUpperCase())\r\n         doc.text(10,finalY+95,'Thanking you')\r\n         doc.text(10,finalY+110,'Regards')\r\n         doc.text(10,finalY+125,'LMV Insurance Broking Services')\r\n         doc.text(10,finalY+140,'9493326920')\r\n\r\n         doc.save(`${props.account[0].first_name} ${props.account[0].last_name} ${new Date(fromDate).getDate() === 1 && new Date(toDate).getDate() <= 15 ? 'Start' : 'End'} of ${addMonths(new Date(props.dates.from_date),1).toLocaleDateString('en-GB',{year:'numeric',month:'long'})}`)\r\n    }\r\n    const downloadPdf = ()=>{\r\n        exportPDF();\r\n     }\r\n\r\n     const calculateTotal=(data)=>{\r\n        return data.reduce((accumulator,currentValue)=>{\r\n            return currentValue.net_premium * 0.5 + accumulator\r\n        }, 0)\r\n     }\r\n\r\n     const getTds= ()=>{\r\n        console.log(props.personType);\r\n        switch (props.personType) {\r\n            case \"individual\":\r\n              return 1;\r\n              break;\r\n            case \"non-individual\":\r\n              return 2;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n     }\r\n    //  console.log('date',new Date().toLocaleDateString(\"en-GB\", {year: 'numeric', month: 'long', day: 'numeric'}));\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive p-2\">\r\n                {props.data.length > 0 ?<table id=\"reports-table\" className=\"table table-hover table-striped\" style={{borderCollapse:'initial',fontSize:'13px'}}>\r\n                    <thead className=\"text-white\">\r\n                        <tr>\r\n                            <th>Sr.no</th>\r\n                            {/* <th>Application Number</th> */}\r\n                            <th>Customer&nbsp;Name</th>\r\n                            <th>Policy&nbsp;Number</th>\r\n                            <th>Plan&nbsp;Name</th>\r\n                            <th>Mode</th>\r\n                            {props.path === 'life-insurance-payouts'? <th>Policy&nbsp;Term</th>:<th>Policy&nbsp;Tenure</th>}\r\n                            {props.path === 'life-insurance-payouts'? <th>PPT</th> :<th>Type&nbsp;of&nbsp;Insurance</th>}\r\n                            <th>Premium</th>\r\n                            <th>Rate</th>\r\n                            <th>Date&nbsp;of&nbsp;issue</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.data.map((element,index)=>{\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <td>{index+1}</td>\r\n                                    {/* <td>{element.application_number}</td>  */}\r\n                                    <td>{element.customer_name}</td>\r\n                                    <td>{element.policy_number}</td>\r\n                                    <td>{element.plan_name}</td>\r\n                                    <td>{element.premium_payment_mode}</td>\r\n                                    {props.path === 'life-insurance-payouts'?<td>{element.policy_term}</td>:<td>{element.policy_tenure}</td>}\r\n                                    {props.path === 'life-insurance-payouts'? <td>{element.premium_payment_term}</td>:<td>{element.type_of_insurance}</td>}\r\n                                    <td>{element.net_premium}</td>\r\n                                    <td>50%</td>\r\n                                    {props.path === 'life-insurance-payouts'? <td>{new Date(element.policy_issue_date).toLocaleDateString('en-GB')}</td>:\r\n                                    <td>{new Date(element.date_of_policy_login).toLocaleDateString('en-GB')}</td>}\r\n                                    <td>{element.net_premium*0.5}</td>\r\n                                    {/* <td style={{display:'none'}}>{(element.net_premium*0.5)}</td> */}\r\n                                </tr>\r\n                            )\r\n                        })} \r\n                        <tr>\r\n                            <td colSpan=\"10\" className=\"text-right\">Total</td>\r\n                            <td>{calculateTotal(props.data)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"10\" className=\"text-right\">TDS</td>\r\n                            <td>{Number(calculateTotal(props.data))*Number(getTds()/100)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"10\" className=\"text-right\">Net Pay</td>\r\n                            <td>{calculateTotal(props.data)-(calculateTotal(props.data))*Number(getTds()/100)}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>:null}\r\n            </div> \r\n            {new Date(props.dates.from_date).getDate()===1 && new Date(props.dates.to_date).getDate()===15 && props.data.length > 0 || new Date(props.dates.from_date).getDate()===16 && new Date(props.dates.to_date).getDate() === new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate() && props.data.length > 0 ?<div className=\"d-flex justify-content-center\">\r\n                <button onClick={downloadPdf} className=\"btn btn-primary mr-2\">Download as PDF<HiOutlineDocumentDownload size=\"1.2em\"/></button>\r\n            </div>:null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LifeInsurancePayouts\r\n","import React,{useState,useEffect} from 'react'\r\nimport {DefaultInput} from '../pos/input';\r\nimport {Formik,Form} from 'formik';\r\nimport * as yup from 'yup';\r\nimport { fetchLifeReportsForPayouts,getPOSPersonType,fetchGeneralReportsForPayouts} from '../helper/api';\r\nimport InsurancePayoutsDetails from './InsurancePayoutsDetails';\r\nimport GeneralInsurancePayouts from './GeneralPayoutDataSearch';\r\n\r\n\r\nfunction GeneralPayoutDataSeach() {\r\n\r\n    const pathName = window.location.pathname.split('/');\r\n    const activePath = pathName[pathName.length - 1];\r\n    const [PayoutData,setPayoutsData] = useState([]);\r\n    const [personType,setPersonType] = useState('');\r\n    const [posAccount,setPosAccount] = useState('');\r\n    const [dates,setDates] = useState([]);\r\n\r\n    useEffect(async() => {\r\n      await getPOSPersonType().then(res=>{setPosAccount(res);setPersonType(res[0].person_type)}).catch(err=>console.log(err))\r\n    }, [activePath,PayoutData])\r\n    \r\n    const initialValues = {\r\n        from_date : '',\r\n        to_date : ''\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        from_date : yup.string().required('Please enter from date'),\r\n        to_date  : yup.string().required('Please enter to date')\r\n    })\r\n\r\n    const inputFields = [\r\n        {type : \"date\", label : \"From Date\", required : true, name :'from_date'},\r\n        {type : \"date\", label : \"To Date\", required : true, name : 'to_date'}\r\n    ]\r\n\r\n    const onSubmit = async(values,onSubmitProps) =>{\r\n      setDates(values);\r\n      await fetchGeneralReportsForPayouts(values.from_date,values.to_date).then(res=>{if(res.length>0){setPayoutsData(res)}else{alert('No data found')}}).catch(err=>console.log(err))\r\n       onSubmitProps.resetForm();\r\n       onSubmitProps.setSubmitting(false); \r\n    }\r\n\r\n    const classes = \"col-12 col-md-6 col-lg-4\";\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n            initialValues = {initialValues}\r\n            onSubmit = {onSubmit}\r\n            validationSchema = {validationSchema}>\r\n            {formik => {\r\n               return(\r\n                  <Form>\r\n                     <h4 className=\"text-center my-3\">General Insurance Payouts</h4>\r\n                     <div className=\"col-12 d-flex flex-wrap justify-content-center\">\r\n                        {inputFields.map((element,index)=>{\r\n                           return(\r\n                              <DefaultInput key={index} \r\n                              classes={classes} \r\n                              name={element.name} \r\n                              label={element.label} \r\n                              type={element.type} \r\n                              required={element.required}\r\n                              className=\"form-control\"/>\r\n                           )\r\n                        })}\r\n                     </div>\r\n                     \r\n                     <div className=\"d-flex justify-content-center\">\r\n                        <input type=\"submit\" className=\"btn btn-dark mt-4\" value=\"submit\"/>\r\n                     </div>\r\n                  </Form>\r\n               )\r\n            }}\r\n         </Formik>\r\n         <InsurancePayoutsDetails data={PayoutData} personType={personType} account={posAccount} dates={dates} path={activePath}/>\r\n        </>\r\n    )\r\n}\r\nexport default GeneralPayoutDataSeach;\r\n","import React,{useState,useEffect} from 'react'\r\nimport {DefaultInput} from '../pos/input';\r\nimport {Formik,Form} from 'formik';\r\nimport * as yup from 'yup';\r\nimport { fetchLifeReportsForPayouts,getPOSPersonType,fetchGeneralReportsForPayouts} from '../helper/api';\r\nimport InsurancePayoutsDetails from './InsurancePayoutsDetails';\r\nimport GeneralInsurancePayouts from './GeneralPayoutDataSearch';\r\n\r\n\r\nfunction PayoutDateSeach() {\r\n\r\n    const pathName = window.location.pathname.split('/');\r\n    const activePath = pathName[pathName.length - 1];\r\n    const [PayoutData,setPayoutsData] = useState([]);\r\n    const [personType,setPersonType] = useState('');\r\n    const [posAccount,setPosAccount] = useState('');\r\n    const [dates,setDates] = useState([]);\r\n\r\n    useEffect(async() => {\r\n      await getPOSPersonType().then(res=>{setPosAccount(res);setPersonType(res[0].person_type)}).catch(err=>console.log(err))\r\n    }, [activePath,PayoutData])\r\n    \r\n    const initialValues = {\r\n        from_date : '',\r\n        to_date : ''\r\n    }\r\n   //  console.log('pos',posAccount);\r\n\r\n    const validationSchema = yup.object({\r\n        from_date : yup.string().required('Please enter from date'),\r\n        to_date  : yup.string().required('Please enter to date')\r\n    })\r\n\r\n    const inputFields = [\r\n        {type : \"date\", label : \"From Date\", required : true, name :'from_date'},\r\n        {type : \"date\", label : \"To Date\", required : true, name : 'to_date'}\r\n    ]\r\n\r\n    const onSubmit = async(values,onSubmitProps) =>{\r\n      setDates(values);\r\n       await fetchLifeReportsForPayouts(values.from_date,values.to_date).then(res=>{if(res.length>0){setPayoutsData(res)}else{alert('No data found')}}).catch(err=>console.log(err))\r\n       onSubmitProps.resetForm();\r\n       onSubmitProps.setSubmitting(false); \r\n    }\r\n\r\n    const classes = \"col-12 col-md-6 col-lg-4\";\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n            initialValues = {initialValues}\r\n            onSubmit = {onSubmit}\r\n            validationSchema = {validationSchema}>\r\n            {formik => {\r\n               return(\r\n                  <Form>\r\n                     <h4 className=\"text-center my-3\">Life Insurance Payouts</h4>\r\n                     <div className=\"col-12 d-flex flex-wrap justify-content-center\">\r\n                        {inputFields.map((element,index)=>{\r\n                           return(\r\n                              <DefaultInput key={index} \r\n                              classes={classes} \r\n                              name={element.name} \r\n                              label={element.label} \r\n                              type={element.type} \r\n                              required={element.required}\r\n                              className=\"form-control\"/>\r\n                           )\r\n                        })}\r\n                     </div>\r\n                     \r\n                     <div className=\"d-flex justify-content-center\">\r\n                        <input type=\"submit\" className=\"btn btn-dark mt-4\" value=\"submit\"/>\r\n                     </div>\r\n                  </Form>\r\n               )\r\n            }}\r\n         </Formik>\r\n         <InsurancePayoutsDetails data={PayoutData} personType={personType} account={posAccount} dates={dates} path={activePath}/>\r\n        </>\r\n    )\r\n}\r\nexport default PayoutDateSeach\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useHistory } from \"react-router\";\r\nimport { Switch, Link, Redirect } from 'react-router-dom';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport \"../App.css\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { FaBars } from 'react-icons/fa';\r\nimport AddCustomer from '../provide-business/AddCustomer';\r\nimport parseJwt from '../jwtDecode';\r\nimport CustomerDetails from '../provide-business/CustomerDetails';\r\nimport EditCustomerDetails from '../provide-business/EditCustomerDetails';\r\nimport Routing from '../protectedRoute/Routing';\r\nimport axios from 'axios';\r\nimport CrmforPosService from '../../src/config/index';\r\nimport GeneralInsuranceTransaction from '../Transcations/generalInsuranceSearch';\r\nimport GeneralInsuranceData from '../Transcations/GeneralInsuranceForm';\r\nimport LifeInsuranceTransaction from '../Transcations/LifeInsuranceSearch';\r\nimport LifeInsuranceData from '../Transcations/LifeInsuranceForm';\r\nimport LifeInsurancePosReports from '../posReports/Life-insurance-pos-reports';\r\nimport GeneralInsurancePosReports from '../posReports/Life-insurance-pos-reports';\r\nimport Home from './Home';\r\nimport LifeInsuranceRenewalReports from '../RenewalReports/LifeInsurance';\r\nimport GeneralInsuranceRenewalReports from '../RenewalReports/GeneralInsurance';\r\nimport PayoutDateSeach from '../payouts/PayoutDateSeach';\r\nimport GeneralPayoutDataSeach from '../payouts/GeneralPayoutDataSearch';\r\n\r\nexport const UserContext = React.createContext();\r\nconst PosHome = (props) => {\r\n  const [role, setRole] = useState('');\r\n  const [sideBarToogle, setSideBarToogle] = useState(false);\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState('');\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(async () => {\r\n    const posId = sessionStorage.getItem('token');\r\n    if (!posId) {\r\n      history.push('/');\r\n      return window.alert('Enter your login credentials')\r\n    } else {\r\n      await axios.get(CrmforPosService.CrmforPosService.baseURL + `/api/pos/login/loginId-username`,{headers:{Authorization:posId}})\r\n        .then(res => setUserName(`${res.data[0].first_name} ${res.data[0].last_name}`))\r\n      await axios.get(CrmforPosService.CrmforPosService.baseURL+'/api/pos/login/get-pos-role',{headers:{Authorization:posId}})\r\n        .then(res=>setRole(res.data[0].pos_id))\r\n        .catch(err => console.log(err))\r\n    }\r\n  }, [history, role,userName]);\r\n\r\n  function logout() {\r\n    if (window.confirm(\"Are you sure you want to Logout ?\")) {\r\n      sessionStorage.clear();\r\n      props.history.push({\r\n        pathname: `/`\r\n      });\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n\r\n  const styleProps = useSpring({\r\n    opacity: 1,\r\n    marginLeft: 0,\r\n    from: { opacity: 0, marginLeft: -500 }\r\n  });\r\n\r\n  var toggleSideBar = () => {\r\n    setSideBarToogle(!sideBarToogle)\r\n  }\r\n\r\n  let closeBar = (e) => {\r\n    if (e.target.tagName === 'A') {\r\n      toggleSideBar();\r\n      active(e.target.textContent)\r\n    }\r\n  }\r\n\r\n  const active = async (e) => {\r\n    const allLis = document.querySelectorAll(\".pro-menu-item\");\r\n\r\n\r\n    for (const li of allLis) {\r\n      if (!li.classList.contains(\"pro-sub-menu\")) {\r\n        if (li.classList.contains(\"activeClass\")) {\r\n          li.classList.remove(\"activeClass\");\r\n          li.querySelector('a').style.color = \"inherit\";\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const li of allLis) {\r\n      if (!li.classList.contains(\"pro-sub-menu\")) {\r\n        if (li.textContent === e) {\r\n          li.classList.add('activeClass');\r\n          li.querySelector('a').style.color = \"black\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={role}>\r\n      <Fragment>\r\n        <animated.div style={styleProps}>\r\n          <div className=\"Home_main_div\">\r\n            <div className=\"Home_header_div\">\r\n              <div className=\"Home_sidebar_button\" onClick={toggleSideBar}><FaBars size=\"1.5em\" /></div>\r\n              <h4 className=\"p-2 align-self-center\" style={{ color: \"white\", marginTop: \"9px\" }}>LMVIB POS for Insurance Broking</h4>\r\n              <h6 className=\"m-0 p-0 align-self-center text-white\"><strong>{`Welcome,${userName}`}&nbsp; | {`POS ID: ${role.toLocaleUpperCase()}`}</strong></h6>\r\n              <button className=\"btn p-1 align-self-center Home_logout btn-dark\" onClick={() => logout()}>Logout</button>\r\n            </div>\r\n\r\n            <div className=\"Home_content\">\r\n\r\n              <div onClick={e => closeBar(e)} className={[\"Home_sidebar\", sideBarToogle ? \"pro-sidebar-open\" : \"pro-sidebar-close\"].join(\" \")}>\r\n                <ProSidebar className='Home_proSideBar'>\r\n                  <Menu iconShape=\"square\">\r\n                    <MenuItem>\r\n                      <Link to=\"/home/reports-count\">Home</Link>\r\n                    </MenuItem>\r\n                    <SubMenu title=\"Provide Business\">\r\n                      <MenuItem  >\r\n                        <Link to='/home/add-customer'>Add New Customer</Link>\r\n                      </MenuItem>\r\n                      <MenuItem>\r\n                        <Link to='/home/cutomer-details'>Customer Details</Link>\r\n                      </MenuItem>\r\n                    </SubMenu>\r\n                    <SubMenu title=\"Business Transaction\">\r\n                      <MenuItem  >\r\n                        <Link to='/home/business-transaction/life-insurance-transaction'>Life Insurance Transaction</Link>\r\n                      </MenuItem>\r\n                      <MenuItem>\r\n                        <Link to='/home/business-transaction/general-insurance-transaction'>General Insurance Transaction</Link>\r\n                      </MenuItem>\r\n                    </SubMenu>\r\n                    <SubMenu title=\"Renewal Reports\">\r\n                      <MenuItem  >\r\n                        <Link to='/home/renewal-reports/life-insurance'>Life Insurance Reports</Link>\r\n                      </MenuItem>\r\n                      <MenuItem>\r\n                        <Link to='/home/renewal-reports/general-insurance'>General Insurance Reports</Link>\r\n                      </MenuItem>\r\n                    </SubMenu>\r\n                      <MenuItem>\r\n                        <Link to='/home/life-transactions-pos-reports'>Life Insurance POS Report</Link>\r\n                      </MenuItem>\r\n                      <MenuItem>\r\n                        <Link to='/home/general-transactions-pos-reports'>General Insurance POS Report</Link>\r\n                      </MenuItem>\r\n                    <SubMenu title=\"Status of business\">\r\n                      <MenuItem>\r\n                        <Link to='/home/life-insurance-payouts'>Life Insurance</Link>\r\n                      </MenuItem>\r\n                      <MenuItem>\r\n                        <Link to='/home/general-insurance-payouts'>General Insurance</Link>\r\n                      </MenuItem>\r\n                    </SubMenu>\r\n                  </Menu>\r\n                </ProSidebar>\r\n              </div>\r\n\r\n              <section className=\"Home_content_section\">\r\n                <Switch>\r\n                  <Routing path=\"/home/reports-count\" component={Home}/>\r\n                  <Routing path=\"/home/add-customer\" logout={signOut} component={AddCustomer} />\r\n                  <Routing path=\"/home/cutomer-details\" component={CustomerDetails} />\r\n                  <Routing path=\"/home/edit-customer-details\" component={EditCustomerDetails} />\r\n                  <Routing path=\"/home/business-transaction/life-insurance-transaction\" component={LifeInsuranceTransaction}/>\r\n                  <Routing path=\"/home/business-transaction/general-insurance-transaction\" component={GeneralInsuranceTransaction}/>\r\n                  <Routing path=\"/home/life-insurance-transactions-data\" component={LifeInsuranceData}/>\r\n                  <Routing path=\"/home/general-insurance-transactions-data\" component={GeneralInsuranceData}/>\r\n                  <Routing path=\"/home/life-transactions-pos-reports\" component={LifeInsurancePosReports}/>\r\n                  <Routing path=\"/home/general-transactions-pos-reports\" component={GeneralInsurancePosReports}/>\r\n                  <Routing path=\"/home/renewal-reports/life-insurance\" component={LifeInsuranceRenewalReports}/>\r\n                  <Routing path=\"/home/renewal-reports/general-insurance\" component={GeneralInsuranceRenewalReports}/>\r\n                  <Routing path=\"/home/life-insurance-payouts\" component={PayoutDateSeach}/>\r\n                  <Routing path=\"/home/general-insurance-payouts\" component={GeneralPayoutDataSeach}/>\r\n                </Switch>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </animated.div>\r\n      </Fragment>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PosHome;","import React, { useState,useEffect } from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport 'jspdf-autotable';\r\nimport jspdf from 'jspdf';\r\nimport logo from './logo';\r\nimport {HiOutlineDocumentDownload} from 'react-icons/hi';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nfunction InsuranceReportsTable() {\r\n   const urlActive = window.location.pathname.slice(1);\r\n   const [data,setData] = useState([]);\r\n   const history = useLocation();\r\n   useEffect(() => {\r\n     setData(history.state.responseData);\r\n   }, [data, history.state.responseData]);\r\n   \r\n   const exportPDF = async() => {\r\n      const unit = \"pt\";\r\n      const size = \"A4\"; // Use A1, A2, A3 or A4\r\n      const orientation = \"landscape\"; // portrait or landscape\r\n\r\n      const doc = new jspdf(orientation, unit, size);\r\n      doc.addImage(logo(), 630, 0, 200, 100);\r\n      doc.setFont('helvetica');\r\n      doc.setFontSize(13)\r\n     urlActive==='pos-life-reports'? doc.text('Life Insurance Reports',350,85):doc.text('General Insurance Reports',350,85)\r\n      doc.autoTable({ \r\n         html: '#reports-table',\r\n         theme: 'grid',\r\n         useCss : true,\r\n         startY : 100,\r\n         margin : {left : 4,right:4},\r\n      });\r\n      \r\n      doc.save(urlActive==='pos-life-reports' ? 'Life Insurance Reports.pdf' : 'General Insurance Reports.pdf')\r\n   }\r\n\r\n   const downloadPdf = ()=>{\r\n      exportPDF();\r\n   }\r\n  \r\n   return (\r\n      <>\r\n         <div className=\"icon-pdf d-flex justify-content-left\"></div>\r\n         <div className=\"d-flex justify-content-center mb-2\">\r\n            {urlActive === \"pos-life-reports\" ? <h3>Life Insurance POS Reports</h3>:<h3>General Insurance POS Reports</h3>}\r\n         </div>\r\n         <div className=\"table-responsive\">\r\n            <table id=\"reports-table\" className=\"table table-striped p-0\" style={{ borderCollapse: 'initial',fontSize:'12px' }}>\r\n               <thead className=\"text-white p-0\">\r\n                  <tr>\r\n                     <td className=\"p-1\">Tran&nbsp;ID</td>\r\n                     <td className=\"p-1\">Tran&nbsp;Date</td>\r\n                     <td className=\"p-1\">POS&nbsp;ID</td>\r\n                     <td className=\"p-1\">Cust&nbsp;ID</td>\r\n                     <td className=\"p-1\">Cust&nbsp;Name</td>\r\n                     <td className=\"p-1\">Plan</td>\r\n                     <td className=\"p-1\">Premium</td>\r\n                     {urlActive==='pos-life-reports'?<td className=\"p-1\">Premium Frequency</td>:<td className=\"p-1\">Sub&nbsp;Type</td>}\r\n                     <td className=\"p-1\">Payment</td>\r\n                     {/* <td className=\"p-1\">Reference</td> */}\r\n                     {urlActive==='pos-life-reports' ?<td className=\"p-1\">Appilication</td>:null}\r\n                     <td className=\"p-1\">Account</td>\r\n                     <td className=\"p-1\">Cheque Number</td>\r\n                     <td className=\"p-1\">Cheque Account</td>\r\n                     {urlActive==='pos-life-reports' ?<td className=\"p-1\">Policy Term</td>:<td className=\"p-1\">Policy Tenure</td>}\r\n                     <td className=\"p-1\">Policy Number</td>\r\n                     \r\n                  </tr>\r\n               </thead>\r\n               <tbody className=\"p-0\">\r\n                  {data.map((obj,index)=>{\r\n                     return(\r\n                        <tr key={index}>\r\n                           {urlActive==='pos-life-reports'?<td className=\"p-1\">{`POSL${obj.id}`}</td>:<td className=\"p-1\">{`POSG${obj.id}`}</td>}\r\n                           <td className=\"p-1\">{new Date(obj.date_of_entry).toLocaleDateString('en-GB')}</td>\r\n                           <td className=\"text-uppercase p-1\">{obj.submitted_pos_id.toLocaleUpperCase()}</td>\r\n                           <td className=\"p-1 text-uppercase\">{obj.customer_id}</td>\r\n                           <td className=\"text-capitalize p-1\">{obj.customer_name}</td>\r\n                           <td className=\"p-1\">{obj.plan_name.toLocaleUpperCase()}</td>\r\n                           <td className=\"p-1\">{obj.net_premium}</td>\r\n                           {urlActive==='pos-life-reports'?<td className=\"text-center p-1\">{obj.premium_payment_mode}</td>:<td className=\"p-1\">{obj.sub_type}</td>}\r\n                           <td className=\"text-center p-1\">{obj.mode_of_payment}</td>\r\n                           {/* {obj.reference_number === \"\" ? <td className=\"text-center p-1\">&mdash;</td> : <td>{obj.reference_number}</td>} */}\r\n                           { urlActive==='pos-life-reports'?<td className=\"text-center p-1\">{obj.application_number}</td>:null}\r\n                           {obj.account_number === \"\" ? <td className=\"text-center p-1\">&mdash;</td> : <td>{obj.account_number}</td>}\r\n                           {obj.cheque_number === \"\" ? <td className=\"text-center p-1\">&mdash;</td> : <td>{obj.cheque_number}</td>}\r\n                           {obj.cheque_account === \"\" ? <td className=\"text-center p-1\">&mdash;</td> : <td>{obj.cheque_account}</td>}\r\n                           { urlActive==='pos-life-reports'?<td className=\"text-center p-1\">{obj.policy_term}</td>:<td className=\"text-center p-1\">{obj.policy_tenure}</td>}\r\n                           <td className=\"text-center p-1\">{obj.policy_number}</td>\r\n                        </tr>\r\n                     )\r\n                  })}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"d-flex justify-content-center\">\r\n            <button onClick={downloadPdf}  className=\"btn btn-primary mr-2\">Download as PDF<HiOutlineDocumentDownload size=\"1.2em\"/></button>\r\n            <ReactHTMLTableToExcel\r\n               id=\"reports-table\"\r\n               className=\"btn btn-success\"\r\n               table=\"reports-table\"\r\n               filename=\"reportsxls\"\r\n               sheet=\"reports\"\r\n               buttonText='Download as Excel'\r\n            />\r\n         </div>\r\n         \r\n      </>\r\n   )\r\n}\r\n\r\nexport default InsuranceReportsTable\r\n","import './App.css';\r\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport PosLogin from './pos/Pos-login';\r\nimport PosRegisterDetails from './pos/pos-create-account';\r\nimport PosTermsAndConditions from './pos/pos-term-and-conditions';\r\nimport PosHome from './pos/posHome';\r\nimport InsuranceReportsTable from './posReports/InsuranceReportsTable';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PosLogin}/>\r\n        <Route path =\"/register-pos-details\" component={PosRegisterDetails}/>\r\n        <Route path=\"/pos-terms-and-conditions\" component={PosTermsAndConditions}/>\r\n        <Route path=\"/home\" component={PosHome}/>\r\n        <Route path=\"/pos-life-reports\" component={InsuranceReportsTable}/>\r\n        <Route path = \"/pos-general-reports\" component={InsuranceReportsTable}/>\r\n        <Route path='*' component={PosHome}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}